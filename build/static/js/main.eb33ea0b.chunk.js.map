{"version":3,"sources":["components/Excercises/Excercise6.react.js","components/Excercises/Excercise15.react.js","utils.js","styles/GenerationSettingsScreen.style.js","components/GenerationSettingsScreen.react.js","styles/Excercises.style.js","components/Excercises/Excercise1.react.js","components/Excercises/Excercise2.react.js","components/Excercises/Excercise3.react.js","components/Excercises/Excercise4.react.js","components/Excercises/Excercise5.react.js","components/Excercises/Excercise7.react.js","components/Excercises/Excercise8.react.js","components/Excercises/Excercise10.react.js","components/Excercises/Excercise11.react.js","components/Excercises/Excercise12.react.js","components/Excercises/jseditor_tools.js","components/Excercises/Excercise13.react.js","components/Excercises.react.js","extraFiles.js","components/GeneratedResultsScreen.react.js","App.js","index.js"],"names":["Excercise6","props","generateExcerciseData","comparionTypes","min","max","this","condition1","comparison","Math","floor","random","with","utils","condition2","conditionsComparison","neededOutput","executionsCount","executions","Array","fill","executionsOutput","i","length","input1","input2","condition1true","eval","condition2true","push","answer","filter","output","map","execution","join","className","scope","React","Component","defaultCode","Excercise15","codemirrorRef","createRef","state","value","resetConfirmationModalOpen","execution_input","execution_output","execution_output_type","multiple","non_multiple","exampleSolution","test","toString","input","example_input","example_output","setState","f","executed_code","undefined","includes","e","toggle","tdstyles","flex","padding","paddingRight","style","overflow","width","colspan","paddingBottom","display","alignItems","color","onClick","ResetConfirmationModal","open","handleReset","execute","verticalAlign","height","rowspan","paddingLeft","options","mode","theme","lineNumbers","onBeforeChange","editor","data","ref","fontStyle","isOpen","shuffle","array","j","temp","min_inclusive","max_inclusive","exclude","randomItem","capitalize","string","charAt","toUpperCase","substring","toPureLabel","replace","wordsLimit","limit","split","slice","flatObject","nestedObject","traverseAndFlatten","currentNode","target","flattenedKey","key","hasOwnProperty","newKey","obj","flattenedObject","flatten","styles","bg","position","justifyContent","gap","form","textAlign","maxWidth","whiteSpace","gallery","GenerationSettingsScreen","ongenerate","Form","Heading","Generator","refSeed","InputGroup","Input","placeholder","type","Button","innerRef","Gallery","src","alt","excerciseOuter","marginBottom","excerciseIndex","border","excerciseInner","Excercise1","_symbolEncodingSizeInt","pow","ceil","_symbolEncodingSizeType","symbolEncodingSize","symbolEncodingSizeInBits","symbolsRemoved","animalsByCharCount","2","3","4","5","6","7","8","9","listOfAnimals","possibleWords","removedName","find","animal","removedNameBits","writtenText","Excercise2","decodedMessage","encodedMessage","letters","_letter","Object","keys","alternativeSolution","findAllSolutions","lookForReversed","reverse","buffer","_alternativeSolution","digit","_index","values","indexOf","Table","Excercise3","condition2text","_invert","Boolean","String","_i","logicalExpression","Excercise4","pointNames","startingPoint","mediumPoint","endingPoint","solve","points","pointsWithRoads","start","medium","end","Excercise5","startNumber","algorithm","endNumber","operation","filename","randomWords","servername","protocol","segments","provider","List","listItems","item","Excercise8","possibleTerms","term1","term2","termShown","requests","pages","pagesOverall","responses","request","termFound","page","or","both","term","Excercise10","decodedIntegers","integers","integer","integerNotation","notation","IntegerNotation","Text","topFolder","window","appData","extraFiles","subFolders","subFolderFiles","entries","fileContent","quote","Excercise11","useState","setExtraFiles","genCallback2","extension","extraFileExtensions","folder","filenames","regex","RegExp","Excercise12","genCallback","EDITOR_JS_TOOLS","underline","class","Underline","inlineToolbar","shortcut","table","config","rows","cols","paragraph","Paragraph","Excercise13","Card","CardBody","logLevel","tools","i18n","messages","toolNames","ui","blockTunes","text","canvas","markdownRef","fetchRandomText","ryba","pop","cell","borderTop","borderLeft","update","ReactDOMServer","renderToString","id","allowDangerousHtml","format","borderBottom","borderRight","borderRadius","textSplitted","word_index","renderedMarkdown","rer","html2canvas","component","document","querySelector","componentMarkdown","createElement","appendChild","outerHTML","componentContent","currentScroll","scrollY","scrollTo","top","behavior","body","then","remove","Excercises","excercisesComponents","number","hideAnswerInput","Excercise","ExcerciseText","answers","ExcerciseAnswer","currentTarget","InputGroupText","onInput","handleInput","folderNames","extensions","seed","ExtraFiles","startGeneration","extraFilesSetState","extraFilesDownloading","timerOut","generated","setTimeout","endGeneration","generate","download","Promise","resolve","reject","topFolders","el","topFolderName","topFolderRef","subFolderName","subfolderRef","files","fileName","zip","JSZip","subFolderContent","subFolderRef","file","generateAsync","content","saveAs","GeneratedResultsScreen","Header","header","Copy","alert","copySeed","GeneratedExcercises","sections_excersices","1","Section","excercisesIndexes","SectionName","sectionInstructionsText","SectionInstructions","Alert","windowPhase","size","downloadButton","extra-files-action-button","downloaderButton","contentDocument","setAttribute","startButton","buttonStarter","onLoad","loaded","Progress","App","isSettingsScreen","setIsSettingsScreen","seedRef","current","randomstring","seedrandom","global","generateExcercises","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.eb33ea0b.chunk.js","sourcesContent":["import React from 'react'\nimport utils from '../../utils.js'\n\nclass Excercise6 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    const comparionTypes = ['>', '>=', '<', '<=', '==']\n    const min = -5, max = 20\n\n    this.condition1 = {\n      comparison: comparionTypes[Math.floor(Math.random()*5)],\n      with: utils.random(min, max)\n    }\n\n    this.condition2 = {\n      comparison: comparionTypes[Math.floor(Math.random()*5)],\n      with: utils.random(min, max)\n    }\n\n    this.conditionsComparison = ['and', 'or'][Math.floor(Math.random()*2)]\n\n    this.neededOutput = ['YES', 'NO'][Math.floor(Math.random()*2)]\n\n    this.executionsCount = utils.random(5, 15)\n    this.executions = Array(this.executionsCount).fill([])\n    this.executionsOutput = []\n    for(let i = 0; i < this.executions.length; i++){\n      let input1 = utils.random(min, max)\n      let input2 = utils.random(min, max)\n      this.executions[i] = [input1, input2]\n\n      let condition1true = eval(input1 + this.condition1.comparison + this.condition1.with);\n      let condition2true = eval(input2 + this.condition2.comparison + this.condition2.with);\n\n      if (this.conditionsComparison === 'and'){\n        if (condition1true && condition2true){\n          this.executionsOutput.push('YES')\n        } else {\n          this.executionsOutput.push('NO')\n        }\n      } else if (this.conditionsComparison === 'or'){\n        if (condition1true || condition2true){\n          this.executionsOutput.push('YES')\n        } else {\n          this.executionsOutput.push('NO')\n        }\n      }\n    }\n    this.answer = this.executionsOutput.filter(output => output === this.neededOutput).length\n    this.executions = this.executions.map(execution => `(${execution[0]}, ${execution[1]})`).join('; ')\n  }\n\n  render(){\n    return (\n      <div>\n        <p>Ниже приведена программа, записанная на трёх языках программирования.</p>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Алгоритмический язык</th>\n              <th scope=\"col\">Pascal</th>\n              <th scope=\"col\">Python</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <pre><code>\n                        алг\n                  {'\\n'}нач\n                  {'\\n'}цел s, t\n                  {'\\n'}ввод s\n                  {'\\n'}ввод t\n                  {'\\n'}если s {this.condition1.comparison} {this.condition1.with} {this.conditionsComparison==='and'?'и':'или'} t {this.condition2.comparison} {this.condition2.with}\n                  {'\\n'}то вывод \"YES\"\n                  {'\\n'}иначе вывод \"NO\"\n                  {'\\n'}все\n                  {'\\n'}кон\n                </code></pre>\n              </td>\n              <td>\n                <pre><code>\n                        var s, t: integer;\n                  {'\\n'}begin\n                  {'\\n'}readln(s);\n                  {'\\n'}readln(t);\n                  {'\\n'}if (s {this.condition1.comparison} {this.condition1.with}) {this.conditionsComparison} (t {this.condition2.comparison} {this.condition2.with})\n                  {'\\n'}then\n                  {'\\n  '}writeln(\"YES\")\n                  {'\\n'}else\n                  {'\\n  '}writeln(\"NO\")\n                  {'\\n'}end.\n                </code></pre>\n              </td>\n              <td>\n                <pre><code>\n                        s = int(input())\n                  {'\\n'}t = int(input())\n                  {'\\n'}if (s {this.condition1.comparison} {this.condition1.with}) {this.conditionsComparison} (t {this.condition2.comparison} {this.condition2.with}):\n                  {'\\n  '}print(\"YES\")\n                  {'\\n'}else:\n                  {'\\n  '}print(\"NO\")\n                </code></pre>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <p>Было проведено {this.executionsCount} запусков программы, при которых в качестве значений переменных вводились следующие пары чисел (s, t):</p>\n        <p>{this.executions}. Сколько было запусков, при которых программа напечатала «{this.neededOutput}»?</p>\n      </div>\n    )\n  }\n}\n\nexport default Excercise6","import React, { useState } from 'react'\nimport utils from '../../utils.js'\nimport { Button, Row, Col, Modal, ModalHeader, ModalBody, ModalFooter, Card, CardBody } from 'reactstrap'\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/theme/material-ocean.css'\n\nconst defaultCode = `function solution(input){\\n  // формат входных данных: [4,16,28]\\n  let output\\n  return output\\n}`\nclass Excercise15 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.codemirrorRef = React.createRef()\n\n    this.state = {\n      value: defaultCode,\n      resetConfirmationModalOpen: false,\n      execution_input: 'Здесь появится ввод в вашу программу',\n      execution_output: 'Здесь появится вывод вашей программы',\n      execution_output_type: 'default'\n    }\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    this.multiple = utils.random(2, 8)\n    this.non_multiple = utils.random(2, 8, this.multiple)\n\n    const exampleSolution = `solution(array){\n      let multiple = ${this.multiple}\n      let non_multiple = ${this.non_multiple}\n      return array.filter(input => {return (input%multiple===0)&&(input%non_multiple!==0)}).length\n    }`\n    let [input, output] = this.test('function '+exampleSolution.toString())\n    this.example_input = input\n    this.example_output = output\n  }\n\n  execute(){\n    let [input, output] = this.test(this.state.value)\n    this.setState({execution_input: input, execution_output: output || (output===0?output:'Пусто')})\n  }\n\n  test(f){\n    let input = Array(5).fill('').map(random => utils.random(0,100))\n    let executed_code = `${f}\\n solution([${input.join(', ')}])`\n    let output;\n    try {\n      output = eval(executed_code)\n      this.setState({execution_output_type: [undefined, null, ''].includes(output)?'empty':'default'})\n      output = output || (output===0?output:'Пусто')\n    } catch (e) {\n      output = 'Ошибка:\\n'+e\n      this.setState({execution_output_type: 'error'})\n    }\n    input = input.join(' \\n')\n    return [input, output]\n  }\n\n  toggle(){\n    this.setState({resetConfirmationModalOpen: false})\n  }\n\n  handleReset(){\n    this.setState({value: defaultCode})\n    this.toggle()\n  }\n\n  render(){\n    const tdstyles = {flex: 0, padding: 0, paddingRight: '15px'}\n\n    return (\n      <div style={{overflow: 'auto'}}>\n        <p>\n          Напишите программу, которая в последовательности натуральных чисел определяет количество чисел,\n          кратных {this.multiple}, но не кратных {this.non_multiple}. Программа получает на вход количество чисел в последовательности,\n          а затем сами числа. В последовательности всегда имеется число, кратное {this.multiple} и не кратное {this.non_multiple}.\n          Количество чисел не превышает 1000. Введённые числа не превышают 30 000.\n        </p>\n        <p>\n          Программа должна вывести одно число: количество чисел, кратных {this.multiple}, но не кратных {this.non_multiple}.\n        </p>\n        <b>Пример работы программы:</b>{'\\n'}\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Входные данные</th>\n              <th scope=\"col\">Выходные данные</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><pre>{this.example_input}</pre></td>\n              <td><pre>{this.example_output}</pre></td>\n            </tr>\n          </tbody>\n        </table>\n        <Card>\n          <CardBody>\n            <table style={{width: '100%'}}>\n              <tbody>\n                <tr>\n                  <td colspan={2} style={{paddingBottom: '15px'}}>\n                    <div style={{display: 'flex', alignItems: 'center'}}>\n                        <div style={tdstyles}>\n                          <Button color='danger' onClick={() => this.setState({resetConfirmationModalOpen: true})}>Восстановить </Button>\n                          <ResetConfirmationModal open={this.state.resetConfirmationModalOpen}\n                                                  toggle={() => this.toggle()}\n                                                  handleReset={() => this.handleReset()}/>\n                        </div>\n                        <div style={tdstyles}>\n                          <Button color=\"primary\" onClick={() => this.execute()}>Запустить</Button>\n                        </div>\n                        <div style={{...tdstyles, flex: 1}}>\n                          <label className=\"text-muted\">Количество запусков не влияет на оценку</label>\n                        </div>\n                    </div>\n                  </td>\n                </tr>\n                <tr style={{verticalAlign: 'top', height: '50%'}}>\n                  <td rowspan={2} className='col-6' style={{paddingLeft: 0, width: '50%'}}>\n                    <div style={{width: '30vw'}}>\n                      <CodeMirror\n                        value={this.state.value}\n                        options={{\n                          mode: 'javascript',\n                          theme: 'material-ocean',\n                          lineNumbers: true\n                        }}\n                        onBeforeChange={(editor, data, value) => {\n                          this.setState({value});\n                        }}\n                        ref={this.codemirrorRef}\n                      />\n                    </div>\n                  </td>\n                  <td style={{display: 'inline-block'}}>\n                    <b>Входные данные:</b>\n                    <pre>{this.state.execution_input}</pre>\n                  </td>\n                </tr>\n                <tr style={{verticalAlign: 'top', height: '50%'}}>\n                  <td>\n                    <b>Выходные данные:</b>\n                    <pre style={{fontStyle: this.state.execution_output_type==='empty'?'italic':'normal',\n                                 color: this.state.execution_output_type==='empty'?'#999':\n                                 (this.state.execution_output_type==='error'?'#f00':'revert')}}>{this.state.execution_output}</pre>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </CardBody>\n        </Card>\n      </div>\n    )\n  }\n}\n\nclass ResetConfirmationModal extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <Modal isOpen={this.props.open} toggle={() => this.props.toggle()}>\n        <ModalHeader toggle={() => this.props.toggle()}>Вы уверены?</ModalHeader>\n        <ModalBody>\n          Вы действительно хотите вернуть поле для ввода кода в исходное состояние?\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"light\" onClick={() => this.props.toggle()}>Нет</Button>{' '}\n          <Button color=\"secondary\" onClick={() => this.props.handleReset()}>Да</Button>\n        </ModalFooter>\n      </Modal>\n    )\n  }\n}\n\n\nexport default Excercise15","const utils = {\n  shuffle: function(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array\n  },\n\n  random: function(min_inclusive, max_inclusive, exclude = []) {\n    exclude = []\n    exclude.push(...exclude)\n    let random;\n    do {\n      random = Math.floor(min_inclusive + Math.random() * (max_inclusive + 1 - min_inclusive))\n    } while(exclude.includes(random))\n    return random\n  },\n\n  randomItem: function(array) {\n    return array[Math.floor(Math.random() * array.length)]\n  },\n\n  capitalize: function(string) {\n    return string.charAt(0).toUpperCase()+string.substring(1)\n  },\n\n  toPureLabel: function(string) {\n    string = string.replace(/[^а-яА-Я ]/umg, '')\n    string = string.replace(/ и/umg, '')\n    return string\n  },\n\n  wordsLimit: function(string, limit) {\n    return string.split(' ').slice(0, limit).join(' ')\n  },\n\n  flatObject: function(nestedObject) {\n    function traverseAndFlatten(currentNode, target, flattenedKey) {\n        for (var key in currentNode) {\n            if (currentNode.hasOwnProperty(key)) {\n                var newKey;\n                if (flattenedKey === undefined) {\n                    newKey = key;\n                } else {\n                    newKey = flattenedKey + key;\n                }\n\n                var value = currentNode[key];\n                if (typeof value === \"object\") {\n                    traverseAndFlatten(value, target, newKey);\n                } else {\n                    target[newKey] = value;\n                }\n            }\n        }\n    }\n\n    function flatten(obj) {\n        var flattenedObject = {};\n        traverseAndFlatten(obj, flattenedObject);\n        return flattenedObject;\n    }\n\n    return flatten(nestedObject)\n  }\n}\n\nexport default utils","let styles = {\n  bg: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    gap: '50px'\n  },\n\n  form: {\n    textAlign: 'center',\n    width: '90%',\n    maxWidth: '450px',\n    whiteSpace: 'pre-line'\n  },\n\n  gallery: {\n    display: 'flex',\n    gap: '20px'\n  }\n}\n\nexport default styles;","import React from 'react';\nimport styles from '../styles/GenerationSettingsScreen.style.js';\nimport '../styles/GenerationSettingsScreen.css'\nimport {\n  InputGroup,\n  Input,\n  Button\n } from 'reactstrap';\n\nclass GenerationSettingsScreen extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div style={styles.bg} className='generator-form-gallery'>\n        <Form ongenerate={this.props.ongenerate}/>\n        <Gallery />\n      </div>\n    )\n  }\n}\n\nclass Form extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div style={styles.form}>\n        <Heading />\n        {'\\n'}\n        <Generator ongenerate={this.props.ongenerate}/>\n      </div>\n    )\n  }\n}\n\nclass Heading extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <>\n        <h1>Удобный генератор ОГЭ по информатике</h1>\n        <p>Тренажер следующего поколения, который поможет\n           вам подготовиться к ОГЭ по информатике и сдать\n           экзамены на лучший балл</p>\n      </>\n    )\n  }\n}\n\nclass Generator extends React.Component {\n  constructor (props){\n    super(props);\n    this.refSeed = React.createRef();\n  }\n\n  render(){\n    return (\n      <>\n        <InputGroup>\n          <Input placeholder=\"Кол-во вариантов (необязательно)\" type='number' min={1} max={1000}/>\n          <Button color=\"secondary\" onClick={() => this.props.ongenerate(this.refSeed)}>Сгенерировать</Button>\n        </InputGroup>\n        {'\\n'}\n        <Input placeholder=\"seed варианта (необязательно)\" innerRef={this.refSeed} />\n      </>\n    )\n  }\n}\n\nclass Gallery extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div style={styles.gallery}>\n        <img src='https://picsum.photos/300/200' alt='Демонстрация работы сайта' width={300} height={200}/>\n        <img src='https://picsum.photos/300/200?' alt='Демонстрация работы сайта' width={300} height={200}/>\n      </div>\n    )\n  }\n}\n\nexport default GenerationSettingsScreen;","let styles = {\n  excerciseOuter: {\n    display: 'flex',\n    gap: '20px',\n    marginBottom: '35px'\n  },\n\n  excerciseIndex: {\n    height: 'min-content',\n    padding: '0px 20px',\n    border: '1px solid black'\n  },\n\n  excerciseInner: {\n    flex: 1\n  }\n}\n\nexport default styles","import React from 'react'\nimport utils from '../../utils.js'\n\nclass Excercise1 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    let _symbolEncodingSizeInt = Math.pow(2, Math.ceil(Math.random()*4))\n    let _symbolEncodingSizeType = utils.randomItem(['битами', 'байтами'])\n    this.symbolEncodingSize = `${_symbolEncodingSizeInt} ${_symbolEncodingSizeType}`\n    this.symbolEncodingSizeInBits = _symbolEncodingSizeType==='битами'?_symbolEncodingSizeInt:_symbolEncodingSizeInt*8\n\n    this.symbolsRemoved = utils.random(2,8)\n\n    const animalsByCharCount = {\n      2: ['ёж', 'уж', 'як'],\n      3: ['кот', 'пёс', 'рак'],\n      4: ['осёл', 'удав', 'овца'],\n      5: ['песец', 'олень', 'хомяк'],\n      6: ['сайгак', 'свинья', 'собака'],\n      7: ['альпака', 'носорог', 'утконос'],\n      8: ['крокодил', 'хамелеон', 'шимпанзе'],\n      9: ['аллигатор', 'горностай', 'иглошерст']\n    }\n    let listOfAnimals = []\n    for (let i = 0; i < 8; i++) {\n      let _charCount = i+2\n      let possibleWords = animalsByCharCount[_charCount]\n      listOfAnimals.push(utils.randomItem(possibleWords))\n    }\n    listOfAnimals[0] = utils.capitalize(listOfAnimals[0])\n\n    this.removedName = listOfAnimals.find(animal => {\n      if(animal.length === this.symbolsRemoved){return animal}\n    })\n    this.removedNameBits = (this.symbolsRemoved+2)*this.symbolEncodingSizeInBits\n\n    const commaAndSpaceSymbols = 2\n    this.symbolsRemoved += commaAndSpaceSymbols\n\n    this.writtenText = `${listOfAnimals.join(', ')} – животные`\n  }\n\n  render(){\n    return (\n      <div>\n        <p>В одной из кодировок Unicode каждый символ кодируется {this.symbolEncodingSize}.\n          Ученик написал текст (в нём нет лишних пробелов):</p>\n        <pre>{this.writtenText}</pre>\n        <p>Ученик удалил из списка название одного животного, а также лишние запятую и\n          пробел – два пробела не должны идти подряд.</p>\n        <p>При этом размер нового предложения в данной кодировке оказался на {this.removedNameBits+' '}\n          бит меньше, чем размер исходного предложения. Напишите в ответе\n          удалённое название животного.</p>\n      </div>\n    )\n  }\n}\n\nexport default Excercise1","import React from 'react'\nimport { Table } from 'reactstrap'\n\nclass Excercise2 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    this.decodedMessage = ''\n    this.encodedMessage = ''\n\n    this.letters = {'А': '01', 'Б': '100', 'К': '101', 'Л': '111', 'О': '00', 'С': '110'}\n    for (let i = 0; i < 6; i++) {\n      let _letter = Object.keys(this.letters)[Math.floor(Math.random()*6)]\n      this.decodedMessage += _letter\n      this.encodedMessage += this.letters[_letter]\n    }\n\n    let lookForReversed = true\n    this.alternativeSolution = this.findAllSolutions(this.encodedMessage, lookForReversed)\n  }\n\n  findAllSolutions(encodedMessage, lookForReversed = false){\n    let letters = {'А': '01', 'Б': '100', 'К': '101', 'Л': '111', 'О': '00', 'С': '110'}\n    encodedMessage = encodedMessage.split('')\n\n    if(lookForReversed){\n      encodedMessage = encodedMessage.reverse()\n    }\n\n    let buffer = ''\n    let _alternativeSolution = ''\n    for (let digit of encodedMessage){\n      buffer += digit\n      let _index = Object.values(letters).indexOf(buffer)\n      if(_index > -1){\n        buffer = ''\n        _alternativeSolution += Object.keys(letters)[_index]\n      }\n    }\n    if(buffer.length <= 3){\n      let _index = Object.values(letters).indexOf(buffer)\n      if(_index > -1){\n        buffer = ''\n        _alternativeSolution += Object.keys(letters)[_index]\n        return _alternativeSolution\n      } else if (buffer === ''){\n        return _alternativeSolution\n      }\n    }\n    return undefined\n  }\n\n  render(){\n    return (\n      <div>\n        <p>От разведчика было получено следующее сообщение</p>\n        <pre>{this.encodedMessage}</pre>\n        <p>В этом сообщении зашифрован пароль – последовательность русских букв.\n          В пароле использовались только буквы А, Б, К, Л, О, С; каждая буква\n          кодировалась двоичным словом по следующей таблице.</p>\n        <Table className=\"table table-bordered col-5 text-center\">\n          <thead>\n            <tr>\n              <th>А</th>\n              <th>Б</th>\n              <th>К</th>\n              <th>Л</th>\n              <th>О</th>\n              <th>С</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>01</td>\n              <td>100</td>\n              <td>101</td>\n              <td>111</td>\n              <td>00</td>\n              <td>110</td>\n            </tr>\n          </tbody>\n        </Table>\n        <p>Расшифруйте сообщение. Запишите в ответе пароль.</p>\n      </div>\n    )\n  }\n}\n\nexport default Excercise2","import React from 'react'\nimport utils from '../../utils.js'\n\nclass Excercise3 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    let conditionTypes = ['even', 'odd', 'sameDigits', 'notSameDigits']\n    let condition2textTypes = {'even': 'x чётное', 'odd': 'x нечётное',\n      'sameDigits': 'цифры x одинаковые', 'notSameDigits': 'цифры x неодинаковые'}\n\n    const min = 20, max = 70\n    let condition1 = utils.random(min, max)\n    let condition2 = conditionTypes[Math.floor(Math.random()*4)]\n    let condition2text = condition2textTypes[condition2]\n\n    let _invert = Boolean(Math.floor(Math.random()*2))\n    if(_invert){\n      if(condition2 === 'even'){ condition2 = 'odd' }\n      else if(condition2 === 'sameDigits'){ condition2 = 'notSameDigits' }\n    }\n\n    switch(condition2){\n      case 'even':\n        if((condition1+1) % 2 == 0){\n          this.answer = (condition1+1);\n        } else {\n          this.answer = (condition1+2);\n        }\n        break;\n\n      case 'odd':\n        if((condition1+1) % 2 == 1){\n          this.answer = (condition1+1);\n        } else {\n          this.answer = (condition1+2);\n        }\n        break;\n\n      case 'sameDigits':\n        let i = condition1+1;\n        while(String(i)[0] !== String(i)[1]){\n          i++\n        }\n        this.answer = i\n        break;\n\n      case 'notSameDigits':\n        let _i = condition1+1;\n        while(String(_i)[0] === String(_i)[1]){\n          _i++\n        }\n        this.answer = _i\n        break;\n    }\n\n    this.logicalExpression = `(x > ${condition1}) И ${_invert?'НЕ ':''}(${condition2text})`\n  }\n\n  render(){\n    return (\n      <div>\n        <p>Напишите наименьшее число x, для которого истинно высказывание</p>\n        <pre>{this.logicalExpression}</pre>\n      </div>\n    )\n  }\n}\n\nexport default Excercise3","import React from 'react'\nimport utils from '../../utils.js'\n\nclass Excercise4 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    const allPointsNames = 'ABCDEFGH'\n    this.pointNames = allPointsNames.substring(0, utils.random(5, 8)).split('')\n    this.startingPoint = this.pointNames[0]\n    this.mediumPoint = utils.randomItem(this.pointNames)\n    this.endingPoint = utils.randomItem(this.pointNames)\n    this.solve(this.points, this.startingPoint, this.mediumPoint, this.endingPoint)\n  }\n\n  solve(pointsWithRoads, start, medium, end){\n    // Формат: {Точка: {НазваниеДругойТочки: Расстояние}, ...}\n    // Например: {A: {B: 1, C: 4, D: 3, E: 7}, B: {C: 2, D: 5}, C: {D: 3}, D: {E: 5}}\n    const prettyPrintedExample = {\n      'A': {\n        'B': 1,\n        'C': 4,\n        'D': 3,\n        'E': 7\n      },\n\n      'B': {\n        'C': 2,\n        'D': 5\n      },\n\n      'C': {\n        'D': 3\n      },\n\n      'D': {\n        'E': 5\n      }\n    }\n\n    /*\n\n    Алгоритм решения (только для компьютера):\n\n    1. построить для каждого пункта дороги от него\n       (например: пункт А имеет дороги к Е, В, С и количество)\n\n    2. От начального пункта рекурсивно построить все возможные\n       дороги (перебором) до конечного, игнорируя дороги через исключаемый\n\n    3. Отсортировать по количеству и взять наименьшую и\n       вывести количество\n\n    */\n\n    // ! Нужна помощь с алгоритмом перебора всех возможных путей во всех направлениях !\n\n    //console.log(Object.keys(utils.flatten()))\n  }\n\n  render(){\n    return (\n      <div>\n        <p className=\"text-danger\">Это задание еще в разработке</p>\n        <p>\n          Между населёнными пунктами {this.pointNames.join(', ')} построены дороги, протяжённость которых\n          (в километрах) приведена в таблице\n        </p>\n        <p>\n          Определите длину кратчайшего пути между пунктами {this.startingPoint} и {this.endingPoint},\n          проходящего через пункт {this.mediumPoint}. Передвигаться можно только по дорогам, протяжённость\n          которых указана в таблице. Каждый пункт можно посетить только один раз.\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Excercise4","import React from 'react'\nimport utils from '../../utils.js'\n\nclass Excercise5 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    this.startNumber = Math.floor(Math.random() * 10)\n    const min = 2, max = 5\n    this.answer = utils.random(min, max)\n    this.algorithm = ''\n\n    this.endNumber = this.startNumber\n    for (let i = 0; i < 5; i++) {\n      let operation = Math.ceil(Math.random()*2)\n      if(i === 5-1 && !this.algorithm.includes('2')){\n        operation = 2;\n      }\n      this.algorithm += operation\n      if(operation == 1){\n        this.endNumber += 1\n      } else {\n        this.endNumber *= this.answer\n      }\n    }\n  }\n\n  render(){\n    return (\n      <div>\n        <p>У исполнителя Альфа две команды, которым присвоены номера:</p>\n        <pre>1. прибавь 1</pre>\n        <pre>2. умножь на b</pre>\n        <p>(b – неизвестное натуральное число; b ≥ 2).</p>\n        <p>Первая из них увеличивает число на экране на 1,\n           вторая умножает его на b.\n           Алгоритм для исполнителя Альфа – это последовательность номеров команд.\n           Найдите значение числа b, при котором из <b>числа {this.startNumber}</b>{' '}\n           по <b>алгоритму {this.algorithm}</b> будет получено <b>число {this.endNumber}</b>.</p>\n      </div>\n    )\n  }\n}\n\nexport default Excercise5","import React from 'react'\nimport randomWords from 'random-words'\nimport utils from '../../utils.js'\n\nclass Excercise6 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    const extensions = ['txt','doc','pdf','pptx','key']\n    const domains = ['gov','obr','state','talk','reg','tan','term']\n    const domainZones = ['ru','com','org','net','app']\n    const protocol = ['http','https','ftp','ssh']\n\n    this.filename = randomWords({ min: 1, max: 3, join: '_' })+'.'+utils.randomItem(extensions)\n    this.servername = utils.randomItem(domains)+'.'+utils.randomItem(domainZones)\n    this.protocol = utils.randomItem(protocol)\n\n    this.segments = ['/', '://', ...this.filename.split('.'), ...this.servername.split('.'), this.protocol]\n    this.segments[2] += '.'\n    this.segments[4] += '.'\n    this.segments = utils.shuffle(this.segments)\n\n    this.answer = ''\n    this.answer += this.segments.indexOf(this.protocol)+1\n    this.answer += this.segments.indexOf('://')+1\n    this.answer += this.segments.indexOf(this.servername.split('.')[0]+'.')+1\n    this.answer += this.segments.indexOf(this.servername.split('.')[1])+1\n    this.answer += this.segments.indexOf('/')+1\n    this.answer += this.segments.indexOf(this.filename.split('.')[0]+'.')+1\n    this.answer += this.segments.indexOf(this.filename.split('.')[1])+1\n  }\n\n  render(){\n    return (\n      <div>\n        <p>Доступ к файлу <b>{this.filename}</b>, находящемуся на сервере <b>{this.servername}</b>,\n           осуществляется по протоколу <b>{this.protocol}</b>. Фрагменты адреса файла закодированы цифрами от 1\n           до {this.segments.length}. Запишите в ответе последовательность этих цифр, кодирующую адрес\n           указанного файла в сети Интернет.</p>\n         <List provider={this.segments} />\n      </div>\n    )\n  }\n}\n\nclass List extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    const listItems = this.props.provider.map((item, i) => <li key={i}>{item}</li>)\n    return (\n      <ol>\n        {listItems}\n      </ol>\n    )\n  }\n}\n\nexport default Excercise6","import React from 'react'\nimport randomWords from 'random-words'\nimport utils from '../../utils.js'\n\nclass Excercise8 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    const possibleTerms = [['шинель','кофта'],['рыбка','рыбак'],['башня','замок'],['лимон','лайм'],\n                          ['аэрофлот','аэропорт'],['банка','банк'],['лунка','луна'],['решето','решетка'],\n                          ['блок','блог'],['самара','саратов']]\n\n    let [term1, term2] = possibleTerms[Math.floor(Math.random()*possibleTerms.length)]\n    this.term1 = term1\n    this.term2 = term2\n\n    this.termShown = Math.floor(Math.random()*2)\n    this.requests = [this.term1+' | '+this.term2,\n                     (this.termShown?this.term1:this.term2),\n                     this.term1+' & '+this.term2]\n    this.requests = utils.shuffle(this.requests)\n\n    let pages = []\n    let pagesOverall = utils.random(5, 90)\n    for (let i = 0; i < pagesOverall; i++) {\n      switch(Math.floor(Math.random() * 3)){\n        case 0:\n          pages.push(this.term1)\n          break;\n\n        case 1:\n          pages.push(this.term2)\n          break;\n\n        case 2:\n          pages.push('both')\n          break;\n      }\n    }\n\n    this.responses = []\n    for (let request of this.requests) {\n      let termFound;\n      if(request.includes('|')){\n        termFound = pages.filter(page => [this.term1, this.term2, 'both'].includes(page)).length\n      } else if(request.includes('&')){\n        termFound = pages.filter(page => page === 'both').length\n      } else {\n        termFound = pages.filter(page => page === request).length\n      }\n      this.responses.push(termFound*10)\n    }\n\n    let or = pages.filter(page => [this.term1, this.term2, 'both'].includes(page)).length\n    let both = pages.filter(page => page === 'both').length\n    let term = pages.filter(page => page === (this.termShown?this.term1:this.term2)).length\n    this.answer = (or - term + both) * 10\n  }\n\n  render(){\n    return (\n      <div>\n        <p>В языке запросов поискового сервера для обозначения логической операции «ИЛИ»\n           используется символ «|», а для обозначения логической операции «И» – символ «&».</p>\n        <p>В таблице приведены запросы и количество найденных по ним страниц некоторого сегмента сети Интернет.</p>\n        <table className=\"table table-bordered\">\n         <thead>\n           <tr>\n             <th scope=\"col\">Запрос</th>\n             <th scope=\"col\">Найдено страниц (в тысячах)</th>\n           </tr>\n         </thead>\n         <tbody>\n           <tr>\n             <td><pre>{this.requests[0]}</pre></td>\n             <td><pre>{this.responses[0]}</pre></td>\n           </tr>\n           <tr>\n             <td><pre>{this.requests[1]}</pre></td>\n             <td><pre>{this.responses[1]}</pre></td>\n           </tr>\n           <tr>\n             <td><pre>{this.requests[2]}</pre></td>\n             <td><pre>{this.responses[2]}</pre></td>\n           </tr>\n         </tbody>\n       </table>\n       <p>Какое количество страниц (в тысячах) будет найдено по запросу {!this.termShown?this.term1:this.term2}?\n          Считается, что все запросы выполнялись практически одновременно, так\n          что набор страниц, содержащих все искомые слова, не изменялся за\n          время выполнения запросов.</p>\n      </div>\n    )\n  }\n}\n\nexport default Excercise8","import React from 'react'\nimport randomWords from 'random-words'\nimport utils from '../../utils.js'\n\nclass Excercise10 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    let decodedIntegers = Array(3).fill(Math.floor(Math.random()*1000))\n    let notations\n    this.integers = []\n    for (let integer of decodedIntegers){\n      let integerNotation = utils.random(2, 16)\n      this.integers.push({\n                          integer: integer.toString(integerNotation),\n                          notation: integerNotation\n                        })\n    }\n    this.integers = utils.shuffle(this.integers)\n\n    this.answer = Math.max(...decodedIntegers)\n  }\n\n  render(){\n    return (\n      <div>\n        <p>\n          Среди приведённых ниже трёх чисел, записанных в различных системах счисления,\n          найдите максимальное и запишите его в ответе в десятичной системе счисления.\n          В ответе запишите только число, основание системы счисления указывать не нужно.</p>\n        <pre>\n          <IntegerNotation provider={this.integers} />\n        </pre>\n      </div>\n    )\n  }\n}\n\nclass IntegerNotation extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    const listItems = this.props.provider.map((item, i, array) => { return (\n      <span key={i}>\n        <label>{item.integer}\n                        <sub>{item.notation}</sub>\n                                                  {i !== array.length-1 ? ', ' : ''}\n        </label>\n      </span>\n    )})\n    return (\n      <div>{listItems}</div>\n    )\n  }\n}\n\nexport default Excercise10","import React, { useEffect, useMemo, useState } from 'react'\nimport utils from '../../utils.js'\n\nfunction Excercise11(props) {\n  let [extraFiles, setExtraFiles] = React.useState(false)\n  window.genCallback2 = setExtraFiles\n\n  return (\n    <>\n      { !extraFiles ?\n        (\n          <p className=\"text-warning\">Выберете выше вариант решения задач</p>\n        )\n        :\n        (\n          <Text />\n        )\n      }\n    </>\n  )\n}\n\nclass Text extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    this.topFolder = utils.randomItem(Object.keys(window.appData.extraFiles))\n    let subFolders = window.appData.extraFiles[this.topFolder]\n    let subFolderFiles = utils.randomItem(Object.values(subFolders))\n    let [answer, fileContent] = utils.randomItem(Object.entries(subFolderFiles))\n    this.answer = answer\n    this.fileContent = fileContent\n    this.quote = utils.randomItem(fileContent.split('. '))\n  }\n\n  render(){\n    return (\n      <p>\n        В одном из файлов, текст которого приведён в подкаталоге каталога <b>{this.topFolder}</b>,\n        находятся такие слова: «{this.quote}».\n        С помощью поисковых средств операционной системы и текстового редактора или браузера\n        выясните имя файла без пути к нему, только имя с расширением. Например, <i>example.txt</i>\n      </p>\n    )\n  }\n}\n\nexport default Excercise11","import React, { useEffect, useMemo, useState } from 'react'\nimport utils from '../../utils.js'\n\nfunction Excercise12(props) {\n  let [extraFiles, setExtraFiles] = React.useState(false)\n  window.genCallback = setExtraFiles\n\n  return (\n    <>\n      { !extraFiles ?\n        (\n          <p className=\"text-warning\">Выберете выше вариант решения задач</p>\n        )\n        :\n        (\n          <Text />\n        )\n      }\n    </>\n  )\n}\n\nclass Text extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    this.extension = utils.randomItem(window.appData.extraFileExtensions)\n    this.topFolder = utils.randomItem(Object.keys(window.appData.extraFiles))\n    let subFolders = window.appData.extraFiles[this.topFolder]\n    this.answer = 0\n    for (let folder of Object.keys(subFolders)){\n      let filenames = Object.keys(subFolders[folder])\n      let regex = new RegExp('^.*\\\\'+this.extension+'$')\n      this.answer += filenames.filter(filename => regex.test(filename)).length\n    }\n  }\n\n  render(){\n    return (\n      <p>\n        Сколько файлов с расширением {this.extension} содержится в подкаталогах каталога\n        {' '}<b>{this.topFolder}</b>? В ответе укажите только число.\n      </p>\n    )\n  }\n}\n\nexport default Excercise12","import Table from '@editorjs/table'\nimport Underline from '@editorjs/underline'\nimport Paragraph from '@editorjs/paragraph'\n\nexport const EDITOR_JS_TOOLS = {\n  underline: {\n    class: Underline,\n    inlineToolbar: true,\n    shortcut: 'CMD+U'\n  },\n  table: {\n    class: Table,\n    inlineToolbar: true,\n    config: {\n      rows: 2,\n      cols: 3,\n    },\n  },\n  paragraph: {\n    class: Paragraph,\n    inlineToolbar: true,\n  }\n}","import React, { useEffect, useMemo, useState } from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport utils from '../../utils.js'\nimport ryba from 'ryba-js'\nimport ReactMarkdown from 'react-markdown'\nimport underline from 'remark-underline'\nimport html from 'remark-html'\nimport html2canvas from 'html2canvas'\nimport { Card, CardBody } from 'reactstrap'\nimport EditorJs from 'react-editor-js';\nimport { EDITOR_JS_TOOLS } from './jseditor_tools'\n\nclass Excercise13 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n\n  }\n\n  render(){\n    const tdstyles = {flex: 0, padding: 0, paddingRight: '15px'}\n\n    return (\n      <div style={{overflow: 'auto'}}>\n        <p>\n          Создайте в текстовом редакторе документ и напишите в нём следующий текст, точно воспроизведя\n          всё оформление текста, имеющееся в образце. Данный текст должен быть набран шрифтом обычного\n          размера. Отступ первой строки первого абзаца основного текста – 8 пробелов.\n          Расстояние между строками текста — одинарный межстрочный интервал.\n        </p>\n        <p>\n          Основной текст выровнен по ширине; заголовок и текст в ячейках таблицы – по центру. В основном\n          тексте и таблице есть слова, выделенные полужирным или курсивным шрифтом.\n        </p>\n        <p>\n          Интервал между текстом и таблицей не более 1 межабзацного интервала\n        </p>\n        <Card>\n          <CardBody>\n            <Text />\n          </CardBody>\n        </Card>\n        <p></p>\n        <Card>\n          <CardBody>\n            <EditorJs logLevel='ERROR' tools={EDITOR_JS_TOOLS} inlineToolbar={['bold','italic','underline']}\n              i18n={{\n                messages: {\n                  toolNames: {\n                    \"Bold\": \"Жирный\",\n                    \"Italic\": \"Курсив\",\n                    \"Underline\": \"Подчеркивание\",\n                    \"Table\": \"Таблица\",\n                    \"Text\": \"Абзац\"\n                  },\n                  ui: {\n                    \"blockTunes\": {\n                      \"toggler\": {\n                        \"Click to tune\": \"Нажмите, чтобы настроить\",\n                        \"or drag to move\": \"или перетащите\"\n                      },\n                    },\n                    \"toolbar\": {\n                      \"toolbox\": {\n                        \"Add\": \"Добавить\"\n                      }\n                    }\n                  },\n                  blockTunes: {\n                    \"delete\": {\n                      \"Delete\": \"Удалить\"\n                    },\n                    \"moveUp\": {\n                      \"Move up\": \"Переместить вверх\"\n                    },\n                    \"moveDown\": {\n                      \"Move down\": \"Переместить вниз\"\n                    }\n                  }\n                }\n              }}\n              placeholder='Введите текст здесь...'/>\n          </CardBody>\n        </Card>\n      </div>\n    )\n  }\n}\n\nclass Text extends React.Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      text: 'Загрузка...',\n      canvas: <span></span>\n    }\n    this.markdownRef = React.createRef()\n  }\n\n  componentDidMount(){\n    this.fetchRandomText()\n  }\n\n  fetchRandomText(){\n    const max_length = 400\n    let text = ryba(10).substring(0, max_length).split('.')\n    text.pop()\n    text = text.join('.')+'.'\n    const border = '1px solid #dbdbe2'\n    const cell = {\n      borderTop: border,\n      borderLeft: border,\n      padding: '10px'\n    }\n    this.update(ReactDOMServer.renderToString(\n      <div id='render-it'>\n        <ReactMarkdown allowDangerousHtml>{this.format(text)}</ReactMarkdown>\n        <table style={{width: '100%', borderBottom: border, borderRight: border, borderRadius: '5px 5px 5px 5px'}}>\n          <tr>\n            <th style={{...cell, borderRadius: '5px 0 0 0'}}>Вещество</th>\n            <th style={cell}>Плотность</th>\n            <th style={{...cell, borderRadius: '0 5px 0 0'}}>Теплоемкость</th>\n          </tr>\n          <tr>\n            <td style={cell}>Графит</td>\n            <td style={cell}>2100</td>\n            <td style={cell}>700</td>\n          </tr>\n          <tr>\n            <td style={{...cell, borderRadius: '0 0 0 5px'}}>Алмаз</td>\n            <td style={cell}>3500</td>\n            <td style={{...cell, borderRadius: '0 0 5px 0'}}>1000</td>\n          </tr>\n        </table>\n      </div>))\n  }\n\n  format(text) {\n    let textSplitted = text.split(' ')\n    for (let i = 0; i < Math.ceil(Math.random()*5); i++) {\n      let word_index = Math.floor(Math.random()*textSplitted.length)\n      if(!/^\\*([^\\*]*)\\*$/.test(textSplitted[word_index]))\n        textSplitted[word_index] = `*${textSplitted[word_index]}*`\n    }\n    for (let i = 0; i < Math.ceil(Math.random()*5); i++) {\n      let word_index = Math.floor(Math.random()*textSplitted.length)\n      if(!/^\\*\\*([^\\*]*)\\*\\*$/.test(textSplitted[word_index]))\n        textSplitted[word_index] = `**${textSplitted[word_index]}**`\n    }\n    for (let i = 0; i < Math.ceil(Math.random()*5); i++) {\n      let word_index = Math.floor(Math.random()*textSplitted.length)\n      if(!/^__([^_]*)__$/.test(textSplitted[word_index]))\n        textSplitted[word_index] = `<u>${textSplitted[word_index]}</u>`\n    }\n    return textSplitted.join(' ')\n  }\n\n  update(renderedMarkdown) {\n    window.rer = html2canvas\n    let component = document.querySelector('#react-markdown')\n    let componentMarkdown = document.createElement('p')\n    component.appendChild(componentMarkdown)\n    componentMarkdown.outerHTML = renderedMarkdown\n    let componentContent = document.querySelector('#react-markdown > div#render-it')\n    let componentCanvas = document.querySelector('#react-markdown > canvas')\n    let currentScroll = window.scrollY\n    window.scrollTo({top:0,behavior: 'instant'})\n    window.document.body.style.overflow = 'hidden'\n    html2canvas(componentContent).then(function(canvas) {\n      component.appendChild(canvas)\n      componentContent.remove()\n      window.scrollTo({top:currentScroll, behavior: 'instant'})\n      window.document.body.style.overflow = 'auto'\n    });\n  }\n\n  render(){\n    return (\n      <p className='utils--no-margin-bottom' id='react-markdown'>\n\n      </p>\n    )\n  }\n}\n\nexport default Excercise13","import React from 'react'\nimport { InputGroup, InputGroupText, Input } from 'reactstrap'\nimport styles from '../styles/Excercises.style.js'\nimport '../styles/Excercises.css'\nimport Excercise1 from './Excercises/Excercise1.react.js'\nimport Excercise2 from './Excercises/Excercise2.react.js'\nimport Excercise3 from './Excercises/Excercise3.react.js'\nimport Excercise4 from './Excercises/Excercise4.react.js'\nimport Excercise5 from './Excercises/Excercise5.react.js'\nimport Excercise6 from './Excercises/Excercise6.react.js'\nimport Excercise7 from './Excercises/Excercise7.react.js'\nimport Excercise8 from './Excercises/Excercise8.react.js'\nimport Excercise10 from './Excercises/Excercise10.react.js'\nimport Excercise11 from './Excercises/Excercise11.react.js'\nimport Excercise12 from './Excercises/Excercise12.react.js'\nimport Excercise13 from './Excercises/Excercise13.react.js'\nimport Excercise15 from './Excercises/Excercise15.react.js'\n\nclass Excercises extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    let excercisesComponents = []\n    for (let i = this.props.start; i <= this.props.end; i++) {\n      excercisesComponents.push(<Excercise number={i} key={i}/>)\n    }\n\n    return (\n      <div>\n        {excercisesComponents}\n      </div>\n    )\n  }\n}\n\nconst hideAnswerInput = [13, 15]\nclass Excercise extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div style={styles.excerciseOuter}>\n        <div style={styles.excerciseIndex}>{this.props.number}</div>\n        <div style={styles.excerciseInner}>\n          <ExcerciseText number={this.props.number} />\n          {!hideAnswerInput.includes(this.props.number)?(<ExcerciseAnswer number={this.props.number} />):(<></>)}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass ExcerciseText extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    switch(this.props.number){\n      case 1:\n        return <Excercise1 />\n\n      case 2:\n        return <Excercise2 />\n\n      case 3:\n        return <Excercise3 />\n\n      case 4:\n        return <Excercise4 />\n\n      case 5:\n        return <Excercise5 />\n\n      case 6:\n        return <Excercise6 />\n\n      case 7:\n        return <Excercise7 />\n\n      case 8:\n        return <Excercise8 />\n\n      case 9:\n        return <span>?</span>\n\n      case 10:\n        return <Excercise10 />\n\n      case 11:\n        return <Excercise11 />\n\n      case 12:\n        return <Excercise12 />\n\n      case 13:\n        return <Excercise13 />\n\n      case 14:\n        return <span>?</span>\n\n      case 15:\n        return <Excercise15 />\n\n      default:\n        return <p>?</p>\n    }\n  }\n}\n\nwindow.appData = {}\nwindow.appData.answers = {}\nclass ExcerciseAnswer extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  handleInput(e){\n    window.appData.answers[this.props.number] = e.currentTarget.value\n  }\n\n  render(){\n    return (\n      <InputGroup>\n        <InputGroupText>Ответ</InputGroupText>\n        <Input onInput={e => this.handleInput(e)}/>\n      </InputGroup>\n    )\n  }\n}\n\nexport default Excercises;","import JSZip from 'jszip'\nimport utils from './utils.js'\nimport ryba from 'ryba-js'\nimport { saveAs } from 'file-saver';\n\nconst folderNames = ['видения', 'новелла', 'ода', 'опус', 'очерк', 'поэма', 'повесть',\n'пьеса', 'рассказ', 'роман', 'скетч', 'эпопея', 'эпос', 'эссе', 'комедия', 'фарс', 'водевиль',\n'интермедия', 'скетч', 'пародия', 'комедия положений', 'комедия характеров', 'трагедия', 'драма',\n'ужасы', 'эпические', 'басня', 'аполог', 'былина', 'баллада', 'миф', 'новелла', 'повесть', 'рассказ',\n'роман', 'роман-эпопея', 'сказка', 'эпопея', 'лирические', 'ода', 'послание', 'элегия', 'эпиграмма',\n'лиро-эпические', 'стансы', 'баллада', 'поэма', 'драматические', 'драма', 'комедия', 'трагедия']\n\nconst extensions = ['.txt', '.text', '.rtf', '.html', '.log']\nwindow.appData.extraFileExtensions = extensions\n\nconst ExtraFiles = {\n  startGeneration: function(){\n    window.appData.extraFilesSetState('loading')\n\n    window.appData.extraFilesDownloading = {\n      timerOut: false,\n      generated: false\n    }\n\n    setTimeout(() => {\n      window.appData.extraFilesDownloading.timerOut = true\n      this.endGeneration()\n    }, 1000)\n\n    this.generate().then(() => {\n      window.appData.extraFilesDownloading.generated = true\n      this.endGeneration()\n    })\n  },\n\n  endGeneration: function(){\n    if(window.appData.extraFilesDownloading.timerOut && window.appData.extraFilesDownloading.generated){\n      this.download()\n      window.appData.extraFilesSetState('downloaded')\n    }\n  },\n\n  generate: function(){\n    return new Promise((resolve, reject) => {\n      if(!window.appData.extraFiles){\n        window.appData.extraFiles = {}\n        let topFolders = Array(utils.random(3, 6)).fill('').map(el => utils.capitalize(utils.randomItem(folderNames)))\n        for (let topFolderName of topFolders){\n          window.appData.extraFiles[topFolderName] = {}\n          let topFolderRef = window.appData.extraFiles[topFolderName]\n\n          let subFolders = Array(utils.random(4, 12)).fill('').map(el => {\n            let subFolderName = ryba(1)\n            subFolderName = utils.capitalize(subFolderName)\n            subFolderName = utils.toPureLabel(subFolderName)\n            subFolderName = utils.wordsLimit(subFolderName, 1)\n            return subFolderName\n          })\n          for (let subFolderName of subFolders){\n            topFolderRef[subFolderName] = {}\n            let subfolderRef = topFolderRef[subFolderName]\n\n            let files = Array(utils.random(5, 15)).fill('').map(el => {\n              let filename = ryba(1)\n              filename = utils.capitalize(filename)\n              filename = utils.toPureLabel(filename)\n              filename = utils.wordsLimit(filename, utils.random(1, 3))\n              filename = filename.replace(/ /gu, '_')\n              filename += utils.randomItem(extensions)\n              return filename\n            })\n            for (let fileName of files) {\n              let fileContent = ryba(utils.random(10, 50))\n              subfolderRef[fileName] = fileContent\n            }\n          }\n        }\n        window.genCallback(true)\n        window.genCallback2(true)\n        resolve()\n      } else {\n        reject()\n      }\n    });\n  },\n\n  download: function(){\n    let zip = new JSZip();\n    for (let [topFolderName, subFolders] of Object.entries(window.appData.extraFiles)){\n      let topFolderRef = zip.folder(topFolderName)\n      for (let [subFolderName, subFolderContent] of Object.entries(subFolders)){\n        let subFolderRef = topFolderRef.folder(subFolderName)\n        for (let [fileName, fileContent] of Object.entries(subFolderContent)){\n          subFolderRef.file(fileName, `${fileContent}\\n`)\n        }\n      }\n    }\n    zip.generateAsync({type:\"blob\"})\n    .then(function(content) {\n        saveAs(content, \"Дополнительные_Файлы.zip\");\n    });\n  }\n}\n\nwindow.ExtraFiles = ExtraFiles\n\nexport default {}","import React from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport styles from '../styles/GeneratedResultsScreen.style.js'\nimport { BsClipboard } from \"react-icons/bs\"\nimport { Alert, Button, Card, CardBody, Progress } from 'reactstrap'\nimport Excercises from './Excercises.react.js'\nimport '../extraFiles.js'\n\nlet seed;\n\nclass GeneratedResultsScreen extends React.Component {\n  constructor (props){\n    super(props);\n\n    seed = this.props.seed;\n  }\n\n  render(){\n    return (\n      <>\n        <Header />\n        <GeneratedExcercises />\n      </>\n    )\n  }\n}\n\nclass Header extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div styles={styles.header}>\n        <label>сид рандомайзера: {seed} <Copy /></label>\n      </div>\n    )\n  }\n}\n\nclass Copy extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  copySeed(){\n    alert(seed)\n  }\n\n  render(){\n    return (\n      <Button color=\"light\" onClick={() => this.copySeed()}>\n        <BsClipboard />\n      </Button>\n    )\n  }\n}\n\nclass GeneratedExcercises extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col\">{' '}</div>\n            <div className=\"col-10\">\n              <Section number={1} />\n              <Section number={2} />\n            </div>\n          <div className=\"col\">{' '}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst sections_excersices = {1: {start: 1, end: 10}, 2: {start: 11, end: 15}}\nclass Section extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    const excercisesIndexes = sections_excersices[this.props.number]\n\n    return (\n      <>\n        <SectionName {...this.props}/>\n        <SectionInstructions {...this.props}/>\n        <Excercises start={excercisesIndexes['start']} end={excercisesIndexes['end']} />\n      </>\n    )\n  }\n}\n\nclass SectionName extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div className=\"row justify-content-center\">\n        <h2>Часть {this.props.number}</h2>\n      </div>\n    )\n  }\n}\n\nconst section1_instructions = 'Ответами к заданиям 1–10 являются число, слово, последовательность букв или цифр.\\\n                               Ответы укажите в поле для ответов под заданием рядом с текстом задания на этой же\\\n                               страницы, введя ответ с клавиатуры, без пробелов, запятых и других дополнительных\\\n                               символов.'\n\nconst section2_instructions = 'Задания этой части (11–15) решаются вами на компьютере. Для выполнения заданий\\\n                               11, 12 вам нужно будет выбрать один из способов представленных ниже. Ответами\\\n                               к заданиям 11, 12 являются слово или число, которые следует записать в поле для\\\n                               ответов. Результатом выполнения заданий 13–15 является отдельный файл\\\n                               (для одного задания – один файл).\\\n                               Файл проверяется системой на правильность после сдачи.'\n\nconst sectionInstructionsText = {\n  1: section1_instructions,\n  2: section2_instructions\n}\n\nclass SectionInstructions extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <>\n        <Alert color=\"primary\">\n          {sectionInstructionsText[this.props.number]}\n        </Alert>\n        {this.props.number === 2?(<ExtraFiles />):(<></>)}\n      </>\n    )\n  }\n}\n\nclass ExtraFiles extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      windowPhase: 'default'\n    }\n    window.appData.extraFilesSetState = (value) => this.setState({windowPhase: value})\n  }\n\n  loaded(){\n    this.size = '1 МБ'\n    let downloadButton = <Button color='success' id='button-downloader' extra-files-action-button>Скачать zip</Button>\n    let downloaderButton = document.querySelector('#accordion').contentDocument.querySelector('#button-downloader')\n    downloaderButton.outerHTML = ReactDOMServer.renderToString(downloadButton)\n    downloaderButton = document.querySelector('#accordion').contentDocument.querySelector('#button-downloader')\n    downloaderButton.setAttribute('onclick', '__medprovider__(\\'download\\')')\n\n    let startButton = <Button color='success' id='button-browser' extra-files-action-button>Запустить браузер</Button>\n    let buttonStarter = document.querySelector('#accordion').contentDocument.querySelector('#button-browser')\n    buttonStarter.outerHTML = ReactDOMServer.renderToString(startButton)\n    buttonStarter = document.querySelector('#accordion').contentDocument.querySelector('#button-browser')\n    buttonStarter.setAttribute('onclick', '__medprovider__(\\'start_browser\\')')\n  }\n\n  render(){\n    return (\n      <>\n        <Card>\n          <CardBody>\n            <div>\n              {this.state.windowPhase === 'default' ?\n                (\n                  <>\n                    <p>Для выполнения заданий 11, 12 выберете один из двух вариантов. Вы можете выбрать лишь один раз.</p>\n                    <iframe src=\"/accordion.html\" width='100%' height='270px' id='accordion' onLoad={() => this.loaded()}/>\n                  </>\n                )\n                :\n                (\n                  this.state.windowPhase === 'loading' ?\n                    (\n                      <div>\n                        <p>Архив создается и запаковывается...</p>\n                        <Progress value={0} />\n                      </div>\n                    )\n                    :\n                    (\n                      this.state.windowPhase === 'browser' ?\n                        (\n                          <p> todo: file browser </p>\n                        )\n                        :\n                        (\n                          <div style={{display: 'flex', alignItems: 'center', gap: '10px'}}>\n                            <label>Вы выбрали <b>Скачать архив</b>. </label>\n                            <Button color='primary' onClick={() => window.ExtraFiles.download()}>Скачать снова</Button>\n                          </div>\n                        )\n                    )\n                )\n              }\n            </div>\n          </CardBody>\n        </Card>\n        <p></p>\n      </>\n    )\n  }\n}\n\nexport default GeneratedResultsScreen;","import React, { useState } from 'react';\nimport GenerationSettingsScreen from './components/GenerationSettingsScreen.react.js'\nimport GeneratedResultsScreen from './components/GeneratedResultsScreen.react.js'\nimport seedrandom from 'seedrandom';\nimport randomstring from 'randomstring'\n\nlet seed;\nfunction App() {\n  let [isSettingsScreen, setIsSettingsScreen] = React.useState(true);\n  function generateExcercises(seedRef){\n    setIsSettingsScreen(false);\n    seed = seedRef.current.value || randomstring.generate(16)\n    seedrandom(seed, { global: true });\n  }\n\n  return (\n    <>\n      {isSettingsScreen?(<GenerationSettingsScreen ongenerate={seedRef => generateExcercises(seedRef)}/>):(<GeneratedResultsScreen seed={seed}/>)}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './styles/utils.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}