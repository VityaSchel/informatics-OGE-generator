{"version":3,"sources":["components/Excercises/Excercise15tasks/find_multiple_number.js","components/Excercises/Excercise15tasks/reversed_words.js","components/Excercises/Excercise15tasks/repeating_characters.js","components/Excercises/Excercise15tasks/phone_number.js","components/Excercises/Excercise15tasks/unique_number.js","components/Excercises/Excercise15tasks/index.js","components/Excercises/Excercise6.react.js","components/Excercises/Excercise15.react.js","canvas-arrow.js","utils.js","styles/GenerationSettingsScreen.style.js","components/GenerationSettingsScreen.react.js","styles/GeneratedResultsScreen.style.js","styles/Excercises.style.js","components/Excercises/Excercise1.react.js","components/Excercises/Excercise2.react.js","components/Excercises/Excercise3.react.js","components/Excercises/Excercise4.react.js","components/Excercises/Excercise5.react.js","components/Excercises/Excercise7.react.js","components/Excercises/Excercise8.react.js","components/Excercises/Excercise9.react.js","components/Excercises/Excercise10.react.js","components/Excercises/Excercise11.react.js","components/Excercises/Excercise12.react.js","components/Excercises/jseditor_tools.js","components/Excercises/Excercise13.react.js","components/Excercises/Excercise14.react.js","components/Excercises.react.js","components/AnswerChecker.react.js","extraFiles.js","components/GeneratedResultsScreen.react.js","App.js","index.js"],"names":[],"mappings":"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","file":"static/js/main.10e5b03f.chunk.js","sourcesContent":["import dedent from 'dedent-js'\nimport utils from '../../../utils.js'\n\nlet find_multiple_number = {\n  type: 'find_multiple_number',\n  multiple: undefined,\n  non_multiple: undefined,\n  text: `Напишите функцию, которая в последовательности натуральных чисел определяет количество чисел,\\\n         кратных %multiple%, но не кратных %non_multiple%. Программа получает на вход количество чисел в последовательности,\\\n         а затем сами числа. В последовательности всегда имеется число, кратное %multiple% и не кратное %non_multiple%.\\\n         Количество чисел не превышает 1000. Введённые числа не превышают 30 000.\n\n         Программа должна вывести одно число: количество чисел, кратных %multiple%, но не кратных %multiple%.`,\n  languagesSpecificData: {\n    'javascript': {\n      inputFormat: '[4, 16, 28]',\n      outputFormat: '2',\n      inputFillFunction: () => '['+Array(5).fill('').map(() => utils.random(0,100)).join(', ')+']',\n      exampleSolution: `function solution(array){\n                          let multiple = %multiple%\n                          let non_multiple = %non_multiple%\n                          return array.filter(input => {return (input%multiple===0)&&(input%non_multiple!==0)}).length\n                        }`\n    },\n    python: {\n      inputFormat: '[4, 16, 28]',\n      outputFormat: '2',\n      inputFillFunction: () => '['+Array(5).fill('').map(() => utils.random(0,100)).join(', ')+']',\n      exampleSolution: dedent(`\n                        multiple = %multiple%\n                        non_multiple = %non_multiple%\n\n                        def multiples(input):\n                          global multiple\n                          global non_multiple\n                          return ((input%multiple==0) and (input%non_multiple!=0))\n\n                        def solution(array):\n                          return len(list(filter(multiples, array)))`),\n    }\n  }\n}\n\nexport default find_multiple_number","import dedent from 'dedent-js'\nimport utils from '../../../utils.js'\nimport ryba from 'ryba-js'\n\nlet reversed_words = {\n  type: 'reversed_words',\n  limit: undefined,\n  text: `Напишите функцию, которая получает одно или больше слов, и возвращает строку, в которой все слова, в\n         которых больше %limit% букв перевернуты.`,\n  languagesSpecificData: {\n    'javascript': {\n      inputFormat: '[\\'Привет\\', \\'мир\\']',\n      outputFormat: '\\'тевирП рим\\'',\n      exampleSolution: `function solution(string){\n                          let limit = %limit%\n                          return string.split(' ').map(word => (word.length<=%limit% ? word : word.split('').reverse().join(''))).join(' ')\n                        }\n                        `,\n      inputFillFunction: () => '\\''+Array(5).fill('').map(() => utils.wordsLimit(utils.toPureLabel(ryba(1)), 1)).join(' ')+'\\''\n    },\n    'python': {\n      inputFormat: '[\\'Привет\\', \\'мир\\']',\n      outputFormat: '\\'тевирП рим\\'',\n      exampleSolution: dedent(`\n                        limit = %limit%\n\n                        def reverse(x):\n                          global limit\n                          if len(x) > limit:\n                            x = x[::-1]\n                          return x\n\n                        def solution(string):\n                          return ' '.join(list(map(reverse, string.split(' '))))`),\n      inputFillFunction: () => '\\''+Array(5).fill('').map(() => utils.wordsLimit(utils.toPureLabel(ryba(1)), 1)).join(' ')+'\\''\n    }\n  }\n}\n\nexport default reversed_words","import dedent from 'dedent-js'\n\nlet repeating_characters = {\n  type: 'repeating_characters',\n  text: `Напишите функцию, которая возвращает количество повторяюшихся буквенных символов (не чувствительных к регистру)\\\n         и цифр.`,\n   languagesSpecificData: {\n     'javascript': {\n       inputFormat: '\\'testcase\\'',\n       outputFormat: '3',\n       exampleSolution: `function solution(text){\n                           return text.toLowerCase().split('').filter(function(val, i, arr){\n                             return arr.indexOf(val) !== i && arr.lastIndexOf(val) === i;\n                           }).length\n                         }`,\n       inputFillFunction: () => '\\'hello world\\''\n     },\n     'python': {\n       inputFormat: '\\'testcase\\'',\n       outputFormat: '3',\n       inputFillFunction: () => '\\'hello world\\'',\n       exampleSolution: dedent(`\n                         i = -1\n                         array = []\n\n                         def listRightIndex(alist, value):\n                           return len(alist) - alist[-1::-1].index(value) -1\n\n                         def index(array, x, reverse = False):\n                           if x in array:\n                             if reverse:\n                               return listRightIndex(array, x)\n                             else:\n                               return array.index(x)\n                           else:\n                             return -1\n\n                         def repeats(x):\n                           global i\n                           global array\n                           i += 1\n                           return ((index(array, x) != i) and (index(array, x, True) == i))\n\n                         def solution(text):\n                           global array\n                           array = list(text.lower())\n                           return len(list(filter(repeats, array)))\n                           `)\n     }\n   }\n}\n\nexport default repeating_characters","import dedent from 'dedent-js'\nimport utils from '../../../utils.js'\n\nlet phone_number = {\n  type: 'phone_number',\n  text: `Напишите функуцию, которая принимает массив из 10 цифр (от 0 до 9) и возвращает строку \\\n         из этих цифр в формате телефонного номера.`,\n  languagesSpecificData: {\n    'javascript': {\n      inputFormat: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 0]',\n      outputFormat: '\\'+7 (123) 456-78-90\\'',\n      inputFillFunction: () => '['+Array(10).fill().map(digit => utils.random(0, 9)).join(', ')+']',\n      exampleSolution: `function solution(numbers){\n                          let format = \"+7 (xxx) xxx-xx-xx\";\n                          for(let i = 0; i < numbers.length; i++) {\n                            format = format.replace('x', numbers[i]);\n                          }\n                          return format;\n                        }`\n    },\n    'python': {\n      inputFormat: '[1, 2, 3, 4, 5, 6, 7, 8, 9, 0]',\n      outputFormat: '\\'+7 (123) 456-78-90\\'',\n      inputFillFunction: () => '['+Array(10).fill().map(digit => utils.random(0, 9)).join(', ')+']',\n      exampleSolution: dedent(`\n                        def solution(numbers):\n                          format = \"+7 (xxx) xxx-xx-xx\"\n                          for i in range(0, len(numbers)):\n                            format = format.replace('x', str(numbers[i]))\n                          return format`)\n    }\n  }\n}\n\nexport default phone_number","import dedent from 'dedent-js'\nimport utils from '../../../utils.js'\n\nlet unique_number = {\n  type: 'unique_number',\n  text: `Напишите функуцию, которая принимает массив из одинаковых цифр, кроме одной и выводит эту цифру`,\n  languagesSpecificData: {\n    'javascript': {\n      inputFormat: '[1, 1, 1, 2, 1, 1]',\n      outputFormat: '2',\n      exampleSolution: `function solution(arr){\n                          return arr.find(n => arr.indexOf(n) === arr.lastIndexOf(n));\n                        }`,\n      inputFillFunction: () => {\n        let randomInt = utils.random(1, 99)\n        let array = Array(utils.random(5, 10)).fill(randomInt)\n        array.push(utils.random(1, 99), [randomInt])\n        return '['+utils.shuffle(array).join(', ')+']'\n      }\n    },\n    'python': {\n      inputFormat: '[1, 1, 1, 2, 1, 1]',\n      outputFormat: '2',\n      exampleSolution: dedent(`\n                        def listRightIndex(alist, value):\n                          return len(alist) - alist[-1::-1].index(value) -1\n\n                        def solution(arr):\n                          for i in arr:\n                            if arr.index(i) == listRightIndex(arr, i):\n                              return i`),\n      inputFillFunction: () => {\n        let randomInt = utils.random(1, 99)\n        let array = Array(utils.random(5, 10)).fill(randomInt)\n        array.push(utils.random(1, 99, [randomInt]))\n        return '['+utils.shuffle(array).join(', ')+']'\n      }\n    }\n  }\n}\n\nexport default unique_number","/* tasks incapsulated in each file */\nimport find_multiple_number from './find_multiple_number.js'\nimport reversed_words from './reversed_words.js'\nimport repeating_characters from './repeating_characters.js'\nimport phone_number from './phone_number.js'\nimport unique_number from './unique_number.js'\n\nlet _ = find_multiple_number;\n_ = reversed_words;\n_ = repeating_characters;\n_ = phone_number;\n_ = unique_number;\n\nlet tasksTemplates = [\n  {\n    ...find_multiple_number\n  },\n  {\n    ...reversed_words\n  },\n  {\n    ...repeating_characters\n  },\n  {\n    ...phone_number\n  },\n  {\n    ...unique_number\n  }\n]\n\nexport default tasksTemplates","import React from 'react'\nimport utils from '../../utils.js'\n\nclass Excercise6 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    const comparionTypes = ['>', '>=', '<', '<=', '==']\n    const min = -5, max = 20\n\n    this.condition1 = {\n      comparison: comparionTypes[Math.floor(Math.random()*5)],\n      with: utils.random(min, max)\n    }\n\n    this.condition2 = {\n      comparison: comparionTypes[Math.floor(Math.random()*5)],\n      with: utils.random(min, max)\n    }\n\n    this.conditionsComparison = ['and', 'or'][Math.floor(Math.random()*2)]\n\n    this.neededOutput = ['YES', 'NO'][Math.floor(Math.random()*2)]\n\n    this.executionsCount = utils.random(5, 15)\n    this.executions = Array(this.executionsCount).fill([])\n    this.executionsOutput = []\n    for(let i = 0; i < this.executions.length; i++){\n      let input1 = utils.random(min, max)\n      let input2 = utils.random(min, max)\n      this.executions[i] = [input1, input2]\n\n      let condition1true = eval(input1 + this.condition1.comparison + this.condition1.with);\n      let condition2true = eval(input2 + this.condition2.comparison + this.condition2.with);\n\n      if (this.conditionsComparison === 'and'){\n        if (condition1true && condition2true){\n          this.executionsOutput.push('YES')\n        } else {\n          this.executionsOutput.push('NO')\n        }\n      } else if (this.conditionsComparison === 'or'){\n        if (condition1true || condition2true){\n          this.executionsOutput.push('YES')\n        } else {\n          this.executionsOutput.push('NO')\n        }\n      }\n    }\n    this.answer = this.executionsOutput.filter(output => output === this.neededOutput).length\n    this.executions = this.executions.map(execution => `(${execution[0]}, ${execution[1]})`).join('; ')\n    this.answer = utils.encodeAnswer(this.answer)\n  }\n\n  render(){\n    return (\n      <div>\n        <p>Ниже приведена программа, записанная на трёх языках программирования.</p>\n        <table className=\"table table-bordered\">\n          <thead>\n            <tr>\n              <th scope=\"col\">Алгоритмический язык</th>\n              <th scope=\"col\">Pascal</th>\n              <th scope=\"col\">Python</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>\n                <pre><code>\n                        алг\n                  {'\\n'}нач\n                  {'\\n'}цел s, t\n                  {'\\n'}ввод s\n                  {'\\n'}ввод t\n                  {'\\n'}если s {this.condition1.comparison} {this.condition1.with} {this.conditionsComparison==='and'?'и':'или'} t {this.condition2.comparison} {this.condition2.with}\n                  {'\\n'}то вывод \"YES\"\n                  {'\\n'}иначе вывод \"NO\"\n                  {'\\n'}все\n                  {'\\n'}кон\n                </code></pre>\n              </td>\n              <td>\n                <pre><code>\n                        var s, t: integer;\n                  {'\\n'}begin\n                  {'\\n'}readln(s);\n                  {'\\n'}readln(t);\n                  {'\\n'}if (s {this.condition1.comparison} {this.condition1.with}) {this.conditionsComparison} (t {this.condition2.comparison} {this.condition2.with})\n                  {'\\n'}then\n                  {'\\n  '}writeln(\"YES\")\n                  {'\\n'}else\n                  {'\\n  '}writeln(\"NO\")\n                  {'\\n'}end.\n                </code></pre>\n              </td>\n              <td>\n                <pre><code>\n                        s = int(input())\n                  {'\\n'}t = int(input())\n                  {'\\n'}if (s {this.condition1.comparison} {this.condition1.with}) {this.conditionsComparison} (t {this.condition2.comparison} {this.condition2.with}):\n                  {'\\n  '}print(\"YES\")\n                  {'\\n'}else:\n                  {'\\n  '}print(\"NO\")\n                </code></pre>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <p>Было проведено {this.executionsCount} запусков программы, при которых в качестве значений переменных вводились следующие пары чисел (s, t):</p>\n        <p>{this.executions}. Сколько было запусков, при которых программа напечатала «{this.neededOutput}»?</p>\n      </div>\n    )\n  }\n}\n\nexport default Excercise6","import React, { useState } from 'react'\nimport utils from '../../utils.js'\nimport ryba from 'ryba-js'\nimport { Button, Row, Col, Modal, ModalHeader, ModalBody, ModalFooter, Card, CardBody,\n         Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap'\nimport {Controlled as CodeMirror} from 'react-codemirror2'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/mode/javascript/javascript'\nimport 'codemirror/mode/python/python'\nimport 'codemirror/theme/material-ocean.css'\nimport tasksTemplates from './Excercise15tasks/index.js'\n\nconst defaultCode = {\n  'javascript': `function solution(input){\\n  // формат входных данных: %%input%%\\n  // формат выходных данных: %%output%%\\n  let output\\n  return output\\n}`,\n  'python': `def solution(input):\\n  # формат входных данных: %%input%%\\n  # формат выходных данных: %%output%%\\n  output = ''\\n  return output`,\n}\nconst languageNames = {\n  'javascript': 'ECMAScript 6 (JS)',\n  'python': 'Python 3.8'\n}\nconst defaultLanguage = 'javascript'\n\nclass Excercise15 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.sourceTask = utils.randomItem(tasksTemplates)\n\n    let ref = this\n    this.cachedTasksData = {}\n    tasksTemplates.forEach(t => {\n      ref.cachedTasksData[t.type] = {}\n      for (let languageName of Object.keys(languageNames)){\n        ref.cachedTasksData[t.type][languageName] = undefined\n      }\n    })\n\n    this.state = {\n      task: this.generateDataForTask(this.sourceTask, defaultLanguage, this),\n      language: defaultLanguage,\n      defaultCode: undefined,\n      dropdownOpen: false,\n      pythonCompilerLoading: 'none',\n\n      value: undefined,\n      resetConfirmationModalOpen: undefined,\n      execution_input: undefined,\n      execution_output: undefined,\n      execution_output_type: undefined\n    }\n\n    this.codemirrorRef = React.createRef()\n  }\n\n  componentDidMount(){\n    this.generateExcerciseData()\n    let ref = this\n    window.addEventListener('keydown', event => {\n      if(event.key === 'Enter'){\n        if(event.metaKey || event.ctrlKey){\n          document.querySelector('#execute_excercise15').click()\n        }\n      }\n    })\n  }\n\n  generateExcerciseData(){\n    let _defaultCode = this.getDefaultCode(defaultLanguage)\n\n    this.setState({\n      value: _defaultCode,\n      resetConfirmationModalOpen: false,\n      execution_input: 'Здесь появится ввод в вашу программу',\n      execution_output: 'Здесь появится вывод вашей программы',\n      execution_output_type: 'default'\n    }, this.exampleTest)\n  }\n\n  getDefaultCode(language){\n    return defaultCode[language].replace(/%%input%%/g, this.state.task.languagesSpecificData[language].inputFormat).replace(/%%output%%/g, this.state.task.languagesSpecificData[language].outputFormat)\n  }\n\n  generateDataForTask(_task, language, ref) {\n    let cachedTask = ref.cachedTasksData[_task.type][language]\n    if(cachedTask){\n      return cachedTask\n    }\n\n    let task = Object.assign({}, _task)\n    switch(task.type){\n      case 'find_multiple_number':\n        task.multiple = utils.random(2, 8)\n        task.non_multiple = utils.random(2, 8, task.multiple)\n        task.languagesSpecificData[language].exampleSolution = task.languagesSpecificData[language].\n                                                                  exampleSolution.replace(/%multiple%/g, task.multiple)\n                                                                  .replace(/%non_multiple%/g, task.non_multiple)\n        task.text = task.text.replace(/%multiple%/g, task.multiple)\n                             .replace(/%non_multiple%/g, task.non_multiple)\n        break;\n\n      case 'reversed_words':\n        task.limit = utils.random(5, 9)\n        task.languagesSpecificData[language].exampleSolution = task.languagesSpecificData[language].\n                                                                      exampleSolution.replace(/%limit%/g, task.limit)\n        task.text = task.text.replace(/%limit%/g, task.limit)\n        break;\n\n      case 'phone_number':\n      case 'repeating_characters':\n      case 'unique_number':\n        // nothing to change\n        break;\n    }\n\n    ref.cachedTasksData[_task.type][language] = task\n\n    return task\n  }\n\n  exampleTest(){\n    let [input, output] = this.test(this.state.task.languagesSpecificData[this.state.language].exampleSolution)\n    this.setState({example_input: this.formatInput(input),\n                   example_output: output})\n  }\n\n  test(f, specified_input = undefined, display_output = true){\n    let input = undefined, output = undefined;\n    switch(this.state.language){\n      case 'javascript':\n        [input, output] = this.runcode(f, (executed_code) => eval(executed_code), specified_input, display_output)\n        break;\n\n      case 'python':\n        [input, output] = this.runcode(f, (executed_code) => window.python_compile(executed_code), specified_input, display_output)\n        break;\n    }\n    return [input, output]\n  }\n\n  runcode(f, compiler, specified_input = undefined, display_output = true){\n    let input = specified_input ?? this.state.task.languagesSpecificData[this.state.language].inputFillFunction()\n    let executed_code = {\n      'javascript': `${f}\\n solution(${input})`,\n      'python': `${f}\\n__OUTPUT__ = solution(${input})`\n    }[this.state.language]\n    let output;\n    try {\n      output = compiler(executed_code)\n      if(display_output)\n        this.setState({execution_output_type: [undefined, null, ''].includes(output)?'empty':'default'})\n      output = this.formatOutput(output)\n    } catch (e) {\n      output = 'Ошибка:\\n'+e\n      if(display_output)\n        this.setState({execution_output_type: 'error'})\n    }\n    return [input, output]\n  }\n\n  handleExecute(){\n    let [input, output] = this.test(this.state.value)\n    this.setState({ execution_input: this.formatInput(input), execution_output: this.formatOutput(output) })\n  }\n\n  formatInput(string){\n    return (string !== undefined && string.split !== undefined?string.split(', ').join('\\n').slice(1,-1):string)\n  }\n\n  formatOutput(string){\n    if(string === '')\n      return 'Пусто'\n    else\n      return string ?? 'Пусто'\n  }\n\n  testUserSolution(){\n    let failedTests = 0\n    let userSolution = this.state.value\n    for (var i = 0; i < 10; i++) {\n      let [inputToUserSolution, outputFromUserSolution] = this.test(userSolution, undefined, false)\n      let [, correctOutput] = this.test(this.state.task.languagesSpecificData[this.state.language].exampleSolution.toString(),\n                                          inputToUserSolution.split(' \\n'), false)\n      if(outputFromUserSolution != correctOutput) failedTests++\n    }\n    if(failedTests === 0) {\n      return true\n    } else if(failedTests === 10){\n      return false\n    } else {\n      return 'tests failed: '+failedTests\n    }\n  }\n\n  resetModalToggle(){\n    this.setState({resetConfirmationModalOpen: false})\n  }\n\n  handleResetOffer(){\n    if(this.hasDefaultValue()){\n      this.resetToDefault()\n    } else {\n      this.setState({resetConfirmationModalOpen: true})\n    }\n  }\n\n  handleReset(){\n    this.resetModalToggle()\n    this.resetToDefault()\n  }\n\n  resetToDefault(){\n    this.setState({value: this.getDefaultCode(this.state.language)})\n  }\n\n  dropDownToggle(){\n    this.setState({dropdownOpen: !this.state.dropdownOpen})\n  }\n\n  setLanguage(language){\n    if(language != this.state.language){\n      if(language == 'python' && !window.plugins_loaded){\n        this.setState({\n          pythonCompilerLoading: 'flex'\n        })\n        let ref = this\n        window.python_load_compiler()\n        let intervalLoop = setInterval(() => {\n          if(window.plugins_loaded){\n            ref.setLanguageState(language)\n            ref.setState({\n              pythonCompilerLoading: 'none'\n            })\n            clearInterval(intervalLoop)\n          }\n        }, 10)\n      } else {\n        this.setLanguageState(language)\n      }\n    }\n  }\n\n  setLanguageState(language){\n    let setDefaultCode = {}\n    if(this.hasDefaultValue()){\n      setDefaultCode.value = this.getDefaultCode(language)\n    }\n\n    this.setState({\n        task: this.generateDataForTask(this.sourceTask, language, this),\n        language: language,\n        ...setDefaultCode\n      }, this.exampleTest)\n  }\n\n  hasDefaultValue(){\n    return this.getDefaultCode(this.state.language) == this.state.value\n  }\n\n  render(){\n    const tdstyles = {flex: 0, padding: 0, paddingRight: '15px'}\n    const compilerLoaderStyles = {position: 'absolute',\n                                  width: '100%',\n                                  height: '100%',\n                                  flexDirection: 'column',\n                                  justifyContent: 'center',\n                                  alignItems: 'center',\n                                  backgroundColor: '#eeeeee',\n                                  zIndex: 9}\n\n    return (\n      <div style={{position: 'relative'}}>\n        <div style={{...compilerLoaderStyles, display: this.state.pythonCompilerLoading}}>\n          <h3>Загрузка компилятора Python...</h3>\n          <p className='text-muted'>Это может занять некоторое время</p>\n        </div>\n        <div style={{overflow: 'auto'}}>\n          <p>\n            {this.state.task.text}\n          </p>\n          <p>\n            <b>Пример работы программы:</b>\n          </p>\n          <table className=\"table table-bordered\">\n            <thead>\n              <tr>\n                <th scope=\"col\">Входные данные</th>\n                <th scope=\"col\">Выходные данные</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td style={{maxWidth: '30vw', overflowX: 'auto'}}><pre>{this.state.example_input}</pre></td>\n                <td><pre>{this.state.example_output}</pre></td>\n              </tr>\n            </tbody>\n          </table>\n          <Card>\n            <CardBody>\n              <table style={{width: '100%'}}>\n                <tbody>\n                  <tr>\n                    <td colspan={2} style={{paddingBottom: '15px'}}>\n                      <div style={{display: 'flex', alignItems: 'center'}}>\n                        <div style={tdstyles}>\n                          <Dropdown isOpen={this.state.dropdownOpen} toggle={() => this.dropDownToggle()}>\n                            <DropdownToggle caret style={{backgroundColor: '#6f42c1'}} className='dropdown-purple'>\n                              {languageNames[this.state.language]}\n                            </DropdownToggle>\n                            <DropdownMenu dark>\n                              <DropdownItem header>Язык компиляции</DropdownItem>\n                              <DropdownItem onClick={() => this.setLanguage('javascript')}>{languageNames['javascript']}</DropdownItem>\n                              <DropdownItem onClick={() => this.setLanguage('python')}>{languageNames['python']}</DropdownItem>\n                            </DropdownMenu>\n                          </Dropdown>\n                        </div>\n                        <div style={tdstyles}>\n                          <Button color='danger' onClick={() => this.handleResetOffer()}>Восстановить </Button>\n                          <ResetConfirmationModal open={this.state.resetConfirmationModalOpen}\n                                                  toggle={() => this.resetModalToggle()}\n                                                  handleReset={() => this.handleReset()}/>\n                        </div>\n                        <div style={tdstyles}>\n                          <Button color=\"primary\" onClick={() => this.handleExecute()} style={{width: 'max-content'}} id='execute_excercise15'>Запустить <kbd><kbd>{navigator.userAgent.includes('Mac OS X')?'⌘':'Ctrl'}</kbd> + <kbd>Enter</kbd></kbd></Button>\n                        </div>\n                        <div style={{...tdstyles, flex: 1}}>\n                          <label className=\"text-muted\">Количество запусков не влияет на оценку</label>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n                  <tr style={{verticalAlign: 'top', height: '50%'}}>\n                    <td rowspan={2} className='col-6' style={{paddingLeft: 0, width: '50%'}}>\n                      <div style={{width: '30vw'}}>\n                        <CodeMirror\n                          value={this.state.value}\n                          options={{\n                            mode: this.state.language,\n                            theme: 'material-ocean',\n                            lineNumbers: true\n                          }}\n                          onBeforeChange={(editor, data, value) => {\n                            this.setState({value});\n                          }}\n                          ref={this.codemirrorRef}\n                        />\n                      </div>\n                    </td>\n                    <td style={{display: 'inline-block', maxWidth: '30vw', overflowX: 'auto'}}>\n                      <b>Входные данные:</b>\n                      <pre>{this.state.execution_input}</pre>\n                    </td>\n                  </tr>\n                  <tr style={{verticalAlign: 'top', height: '50%'}}>\n                    <td>\n                      <b>Выходные данные:</b>\n                      <pre style={{fontStyle: this.state.execution_output_type==='empty'?'italic':'normal',\n                                   color: this.state.execution_output_type==='empty'?'#999':\n                                   (this.state.execution_output_type==='error'?'#f00':'revert'),\n                                   maxWidth: '30vw', overflowX: 'auto'}}>{this.state.execution_output}</pre>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </CardBody>\n          </Card>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass ResetConfirmationModal extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <Modal isOpen={this.props.open} toggle={() => this.props.toggle()}>\n        <ModalHeader toggle={() => this.props.toggle()}>Восстановить код?</ModalHeader>\n        <ModalBody>\n          Вы действительно хотите вернуть поле для ввода кода в исходное состояние?\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"light\" onClick={() => this.props.toggle()}>Нет</Button>{' '}\n          <Button color=\"secondary\" onClick={() => this.props.handleReset()}>Да</Button>\n        </ModalFooter>\n      </Modal>\n    )\n  }\n}\n\nexport default Excercise15","(function(target) {\r\n  if (!target || !target.prototype)\r\n    return;\r\n  target.prototype.arrow = function(startX, startY, endX, endY, controlPoints) {\r\n    var dx = endX - startX;\r\n    var dy = endY - startY;\r\n    var len = Math.sqrt(dx * dx + dy * dy);\r\n    var sin = dy / len;\r\n    var cos = dx / len;\r\n    var a = [];\r\n    a.push(0, 0);\r\n    for (var i = 0; i < controlPoints.length; i += 2) {\r\n      var x = controlPoints[i];\r\n      var y = controlPoints[i + 1];\r\n      a.push(x < 0 ? len + x : x, y);\r\n    }\r\n    a.push(len, 0);\r\n    for (var i = controlPoints.length; i > 0; i -= 2) {\r\n      var x = controlPoints[i - 2];\r\n      var y = controlPoints[i - 1];\r\n      a.push(x < 0 ? len + x : x, -y);\r\n    }\r\n    a.push(0, 0);\r\n    for (var i = 0; i < a.length; i += 2) {\r\n      var x = a[i] * cos - a[i + 1] * sin + startX;\r\n      var y = a[i] * sin + a[i + 1] * cos + startY;\r\n      if (i === 0) this.moveTo(x, y);\r\n      else this.lineTo(x, y);\r\n    }\r\n  };\r\n})(CanvasRenderingContext2D);\r\n","import md5 from 'md5'\n\nconst utils = {\n  shuffle: function(array) {\n    for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n    }\n    return array\n  },\n\n  random: function(min_inclusive, max_inclusive, exclude = []) {\n    exclude = []\n    exclude.push(...exclude)\n    let random;\n    do {\n      random = Math.floor(min_inclusive + Math.random() * (max_inclusive + 1 - min_inclusive))\n    } while(exclude.includes(random))\n    return random\n  },\n\n  randomItem: function(array) {\n    return array[Math.floor(Math.random() * array.length)]\n  },\n\n  capitalize: function(string) {\n    return string.charAt(0).toUpperCase()+string.substring(1)\n  },\n\n  toPureLabel: function(string) {\n    string = string.replace(/[^а-яА-Я ]/umg, '')\n    string = string.replace(/ и/umg, '')\n    return string\n  },\n\n  wordsLimit: function(string, limit) {\n    return string.split(' ').slice(0, limit).join(' ')\n  },\n\n  flatObject: function(nestedObject) {\n    function traverseAndFlatten(currentNode, target, flattenedKey) {\n        for (var key in currentNode) {\n            if (currentNode.hasOwnProperty(key)) {\n                var newKey;\n                if (flattenedKey === undefined) {\n                    newKey = key;\n                } else {\n                    newKey = flattenedKey + key;\n                }\n\n                var value = currentNode[key];\n                if (typeof value === \"object\") {\n                    traverseAndFlatten(value, target, newKey);\n                } else {\n                    target[newKey] = value;\n                }\n            }\n        }\n    }\n\n    function flatten(obj) {\n        var flattenedObject = {};\n        traverseAndFlatten(obj, flattenedObject);\n        return flattenedObject;\n    }\n\n    return flatten(nestedObject)\n  },\n\n  closePoints: function(point1, point2, shrinkPercentage){\n    // point1: array[2], point2: array[2], shrinkPercentage: Number(0.0 - 1.0)\n\n    let x1 = point1[0]\n    let x2 = point2[0]\n    let y1 = point1[1]\n    let y2 = point2[1]\n\n    let xCross = x2\n    let yCross = y1\n\n    let crossWidth = xCross-x1\n    let crossWidthOffset = crossWidth*shrinkPercentage/2\n    let crossWidthShrink = crossWidth*(1-shrinkPercentage)\n\n    let shrinkedPoint1X = x1 + crossWidthOffset\n    let shrinkedPoint2X = x1 + crossWidthOffset + crossWidthShrink\n\n    let crossHeight = yCross-y2\n    let crossHeightOffset = crossHeight*shrinkPercentage/2\n    let crossHeightShrink = crossHeight*(1-shrinkPercentage)\n\n    let shrinkedPoint1Y = y2 + crossHeightOffset\n    let shrinkedPoint2Y = y2 + crossHeightOffset + crossHeightShrink\n\n    return [[shrinkedPoint1X, shrinkedPoint2Y], [shrinkedPoint2X, shrinkedPoint1Y]]\n  },\n\n  encodeAnswer: function(answer){\n    if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n      pushAnswerToDebug(answer)\n    }\n\n    const salt = '🧂🧂🧂 SALT !!! :D 🧂🧂🧂'\n    if(answer === undefined) {\n      return answer\n    } else {\n      let _answer = String(answer).toLowerCase()\n      return md5(_answer+salt)\n    }\n  },\n\n\n  ending: function(digit){\n    digit = Number(digit)\n    if(digit % 10 == 0 || digit.isBetween(11, 14)){\n      return 'ов'\n    } else if(digit % 10 == 1 && digit !== 11) {\n      return ''\n    } else if((digit % 10).isBetween(2,4)) {\n      return 'а'\n    } else {\n      return 'ов'\n    }\n  },\n\n  copyText: function(string){\n    let _tmpinput = document.createElement('textarea')\n    _tmpinput.style = {\n      'display': 'none'\n    }\n    document.body.appendChild(_tmpinput)\n    _tmpinput.value = string\n    _tmpinput.select()\n    _tmpinput.setSelectionRange(0, 99999)\n    document.execCommand(\"copy\")\n    _tmpinput.remove()\n  }\n}\n\nNumber.prototype.isBetween = function(min_inclusive, max_inclusive){\n  return (this >= min_inclusive && this <= max_inclusive)\n}\n\nArray.prototype.last = function(){\n  return this[this.length-1]\n}\n\nfunction pushAnswerToDebug(answer){\n  if(window.appData.DEBUG === undefined){\n    window.appData.DEBUG = {}\n  }\n  if(window.appData.DEBUG.answers === undefined){\n    window.appData.DEBUG.answers = []\n  }\n  window.appData.DEBUG.answers.push(answer)\n}\n\nexport default utils","let styles = {\n  bg: {\n    position: 'absolute',\n    width: '100%',\n    height: '100%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    gap: '50px'\n  },\n\n  form: {\n    textAlign: 'center',\n    width: '90%',\n    maxWidth: '450px',\n    whiteSpace: 'pre-line'\n  },\n\n  gallery: {\n    display: 'flex',\n    gap: '20px'\n  }\n}\n\nexport default styles;","import React from 'react';\nimport styles from '../styles/GenerationSettingsScreen.style.js';\nimport '../styles/GenerationSettingsScreen.css'\nimport {\n  InputGroup,\n  Input,\n  Button\n } from 'reactstrap';\n\nclass GenerationSettingsScreen extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div style={styles.bg} className='generator-form-gallery'>\n        <Form ongenerate={this.props.ongenerate}/>\n        <Gallery />\n      </div>\n    )\n  }\n}\n\nclass Form extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div style={styles.form}>\n        <Heading />\n        {'\\n'}\n        <Generator ongenerate={this.props.ongenerate}/>\n      </div>\n    )\n  }\n}\n\nclass Heading extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <>\n        <h1>Удобный генератор ОГЭ по информатике</h1>\n        <p>Тренажер следующего поколения, который поможет\n           вам подготовиться к ОГЭ по информатике и сдать\n           экзамены на лучший балл</p>\n      </>\n    )\n  }\n}\n\nclass Generator extends React.Component {\n  constructor (props){\n    super(props);\n    this.refSeed = React.createRef();\n  }\n\n  render(){\n    return (\n      <>\n        <InputGroup>\n          <Input placeholder=\"Кол-во вариантов (необязательно)\" type='number' min={1} max={1000}/>\n          <Button color=\"secondary\" onClick={() => this.props.ongenerate(this.refSeed)}>Сгенерировать</Button>\n        </InputGroup>\n        {'\\n'}\n        <Input placeholder=\"seed варианта (необязательно)\" innerRef={this.refSeed} maxLength={20} />\n      </>\n    )\n  }\n}\n\nclass Gallery extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div style={styles.gallery}>\n        <img src='https://picsum.photos/300/200' alt='Демонстрация работы сайта' width={300} height={200}/>\n        <img src='https://picsum.photos/300/200?' alt='Демонстрация работы сайта' width={300} height={200}/>\n      </div>\n    )\n  }\n}\n\nexport default GenerationSettingsScreen;","let styles = {\n  header: {\n    'background-color': '#eee',\n    'padding': '10px',\n    'display': 'flex',\n    'justify-content': 'space-between'\n  },\n\n  button: {\n    'display': 'inline-block',\n    'margin-left': '10px'\n  }\n}\n\nexport default styles","let styles = {\n  excerciseOuter: {\n    display: 'flex',\n    gap: '20px',\n    marginBottom: '35px'\n  },\n\n  excerciseIndex: {\n    height: 'min-content',\n    padding: '0px 20px',\n    border: '1px solid black'\n  },\n\n  excerciseInner: {\n    flex: 1\n  }\n}\n\nexport default styles","import React from 'react'\nimport utils from '../../utils.js'\n\nclass Excercise1 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    let _symbolEncodingSizeInt = Math.pow(2, Math.ceil(Math.random()*4))\n    let _symbolEncodingSizeType = utils.randomItem(['битами', 'байтами'])\n    this.symbolEncodingSize = `${_symbolEncodingSizeInt} ${_symbolEncodingSizeType}`\n    this.symbolEncodingSizeInBits = _symbolEncodingSizeType==='битами'?_symbolEncodingSizeInt:_symbolEncodingSizeInt*8\n\n    this.symbolsRemoved = utils.random(2,8)\n\n    const animalsByCharCount = {\n      2: ['ёж', 'уж', 'як'],\n      3: ['кот', 'пёс', 'рак'],\n      4: ['осёл', 'удав', 'овца'],\n      5: ['песец', 'олень', 'хомяк'],\n      6: ['сайгак', 'свинья', 'собака'],\n      7: ['альпака', 'носорог', 'утконос'],\n      8: ['крокодил', 'хамелеон', 'шимпанзе'],\n      9: ['аллигатор', 'горностай', 'иглошерст']\n    }\n    let listOfAnimals = []\n    for (let i = 0; i < 8; i++) {\n      let _charCount = i+2\n      let possibleWords = animalsByCharCount[_charCount]\n      listOfAnimals.push(utils.randomItem(possibleWords))\n    }\n    listOfAnimals[0] = utils.capitalize(listOfAnimals[0])\n    this.answer = listOfAnimals.find(animal => {\n      if(animal.length === this.symbolsRemoved){return animal}\n    })\n    this.removedNameBits = (this.symbolsRemoved+2)*this.symbolEncodingSizeInBits\n    const commaAndSpaceSymbols = 2\n    this.symbolsRemoved += commaAndSpaceSymbols\n    this.writtenText = `${listOfAnimals.join(', ')} – животные`\n\n    this.answer = utils.encodeAnswer(this.answer)\n  }\n\n  render(){\n    return (\n      <div>\n        <p>В одной из кодировок Unicode каждый символ кодируется {this.symbolEncodingSize}.\n          Ученик написал текст (в нём нет лишних пробелов):</p>\n        <pre>{this.writtenText}</pre>\n        <p>Ученик удалил из списка название одного животного, а также лишние запятую и\n          пробел – два пробела не должны идти подряд.</p>\n        <p>При этом размер нового предложения в данной кодировке оказался на {this.removedNameBits+' '}\n          бит меньше, чем размер исходного предложения. Напишите в ответе\n          удалённое название животного.</p>\n      </div>\n    )\n  }\n}\n\nexport default Excercise1","import React from 'react'\nimport { Table } from 'reactstrap'\nimport utils from '../../utils.js'\n\nclass Excercise2 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    this.decodedMessage = ''\n    this.encodedMessage = ''\n\n    this.letters = {'А': '01', 'Б': '100', 'К': '101', 'Л': '111', 'О': '00', 'С': '110'}\n    for (let i = 0; i < 6; i++) {\n      let _letter = Object.keys(this.letters)[Math.floor(Math.random()*6)]\n      this.decodedMessage += _letter\n      this.encodedMessage += this.letters[_letter]\n    }\n\n    let lookForReversed = true\n    this.alternativeSolution = this.findAllSolutions(this.encodedMessage, lookForReversed)\n    this.answer = [utils.encodeAnswer(this.decodedMessage)]\n    if(this.alternativeSolution)\n      this.answer.push(utils.encodeAnswer(this.alternativeSolution))\n  }\n\n  findAllSolutions(encodedMessage, lookForReversed = false){\n    let letters = {'А': '01', 'Б': '100', 'К': '101', 'Л': '111', 'О': '00', 'С': '110'}\n    encodedMessage = encodedMessage.split('')\n\n    if(lookForReversed){\n      encodedMessage = encodedMessage.reverse()\n    }\n\n    let buffer = ''\n    let _alternativeSolution = ''\n    for (let digit of encodedMessage){\n      buffer += digit\n      let _index = Object.values(letters).indexOf(buffer)\n      if(_index > -1){\n        buffer = ''\n        _alternativeSolution += Object.keys(letters)[_index]\n      }\n    }\n    if(buffer.length <= 3){\n      let _index = Object.values(letters).indexOf(buffer)\n      if(_index > -1){\n        buffer = ''\n        _alternativeSolution += Object.keys(letters)[_index]\n        return _alternativeSolution\n      } else if (buffer === ''){\n        return _alternativeSolution\n      }\n    }\n    return undefined\n  }\n\n  render(){\n    return (\n      <div>\n        <p>От разведчика было получено следующее сообщение</p>\n        <pre>{this.encodedMessage}</pre>\n        <p>В этом сообщении зашифрован пароль – последовательность русских букв.\n          В пароле использовались только буквы А, Б, К, Л, О, С; каждая буква\n          кодировалась двоичным словом по следующей таблице.</p>\n        <Table className=\"table table-bordered col-5 text-center\">\n          <thead>\n            <tr>\n              <th>А</th>\n              <th>Б</th>\n              <th>К</th>\n              <th>Л</th>\n              <th>О</th>\n              <th>С</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>01</td>\n              <td>100</td>\n              <td>101</td>\n              <td>111</td>\n              <td>00</td>\n              <td>110</td>\n            </tr>\n          </tbody>\n        </Table>\n        <p>Расшифруйте сообщение. Запишите в ответе пароль.</p>\n      </div>\n    )\n  }\n}\n\nexport default Excercise2","import React from 'react'\nimport utils from '../../utils.js'\n\nclass Excercise3 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    let conditionTypes = ['even', 'odd', 'sameDigits', 'notSameDigits']\n    let condition2textTypes = {'even': 'x чётное', 'odd': 'x нечётное',\n      'sameDigits': 'цифры x одинаковые', 'notSameDigits': 'цифры x неодинаковые'}\n\n    const min = 20, max = 70\n    let condition1 = utils.random(min, max)\n    let condition2 = conditionTypes[Math.floor(Math.random()*4)]\n    let condition2text = condition2textTypes[condition2]\n\n    let _invert = Boolean(Math.floor(Math.random()*2))\n    if(_invert){\n      if(condition2 === 'even'){ condition2 = 'odd' }\n      else if(condition2 === 'sameDigits'){ condition2 = 'notSameDigits' }\n    }\n\n    switch(condition2){\n      case 'even':\n        if((condition1+1) % 2 == 0){\n          this.answer = (condition1+1);\n        } else {\n          this.answer = (condition1+2);\n        }\n        break;\n\n      case 'odd':\n        if((condition1+1) % 2 == 1){\n          this.answer = (condition1+1);\n        } else {\n          this.answer = (condition1+2);\n        }\n        break;\n\n      case 'sameDigits':\n        let i = condition1+1;\n        while(String(i)[0] !== String(i)[1]){\n          i++\n        }\n        this.answer = i\n        break;\n\n      case 'notSameDigits':\n        let _i = condition1+1;\n        while(String(_i)[0] === String(_i)[1]){\n          _i++\n        }\n        this.answer = _i\n        break;\n    }\n\n    this.logicalExpression = `(x > ${condition1}) И ${_invert?'НЕ ':''}(${condition2text})`\n    this.answer = utils.encodeAnswer(this.answer)\n  }\n\n  render(){\n    return (\n      <div>\n        <p>Напишите наименьшее число x, для которого истинно высказывание</p>\n        <pre>{this.logicalExpression}</pre>\n      </div>\n    )\n  }\n}\n\nexport default Excercise3","import React from 'react'\nimport utils from '../../utils.js'\n\nclass Excercise4 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    const allPointsNames = 'ABCDEFGH'\n    this.pointNames = allPointsNames.substring(0, utils.random(5, 8)).split('')\n    this.startingPoint = this.pointNames[0]\n    this.mediumPoint = utils.randomItem(this.pointNames)\n    this.endingPoint = utils.randomItem(this.pointNames)\n    this.solve(this.points, this.startingPoint, this.mediumPoint, this.endingPoint)\n    this.answer = utils.encodeAnswer(this.answer)\n  }\n\n  solve(pointsWithRoads, start, medium, end){\n    // Формат: {Точка: {НазваниеДругойТочки: Расстояние}, ...}\n    // Например: {A: {B: 1, C: 4, D: 3, E: 7}, B: {C: 2, D: 5}, C: {D: 3}, D: {E: 5}}\n    const prettyPrintedExample = {\n      'A': {\n        'B': 1,\n        'C': 4,\n        'D': 3,\n        'E': 7\n      },\n\n      'B': {\n        'C': 2,\n        'D': 5\n      },\n\n      'C': {\n        'D': 3\n      },\n\n      'D': {\n        'E': 5\n      }\n    }\n\n    /*\n\n    Алгоритм решения (только для компьютера):\n\n    1. построить для каждого пункта дороги от него\n       (например: пункт А имеет дороги к Е, В, С и количество)\n\n    2. От начального пункта рекурсивно построить все возможные\n       дороги (перебором) до конечного, игнорируя дороги через исключаемый\n\n    3. Отсортировать по количеству и взять наименьшую и\n       вывести количество\n\n    */\n\n    // ! Нужна помощь с алгоритмом перебора всех возможных путей во всех направлениях !\n  }\n\n  render(){\n    return (\n      <div>\n        <p className=\"text-danger\">Это задание еще в разработке</p>\n        <p>\n          Между населёнными пунктами {this.pointNames.join(', ')} построены дороги, протяжённость которых\n          (в километрах) приведена в таблице\n        </p>\n        <p>\n          Определите длину кратчайшего пути между пунктами {this.startingPoint} и {this.endingPoint},\n          проходящего через пункт {this.mediumPoint}. Передвигаться можно только по дорогам, протяжённость\n          которых указана в таблице. Каждый пункт можно посетить только один раз.\n        </p>\n      </div>\n    )\n  }\n}\n\nexport default Excercise4","import React from 'react'\nimport utils from '../../utils.js'\n\nclass Excercise5 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    this.startNumber = Math.floor(Math.random() * 10)\n    const min = 2, max = 5\n    this.answer = utils.random(min, max)\n    this.algorithm = ''\n\n    this.endNumber = this.startNumber\n    for (let i = 0; i < 5; i++) {\n      let operation = Math.ceil(Math.random()*2)\n      if(i === 5-1 && !this.algorithm.includes('2')){\n        operation = 2;\n      }\n      this.algorithm += operation\n      if(operation == 1){\n        this.endNumber += 1\n      } else {\n        this.endNumber *= this.answer\n      }\n    }\n    this.answer = utils.encodeAnswer(this.answer)\n  }\n\n  render(){\n    return (\n      <div>\n        <p>У исполнителя Альфа две команды, которым присвоены номера:</p>\n        <pre>1. прибавь 1</pre>\n        <pre>2. умножь на b</pre>\n        <p>(b – неизвестное натуральное число; b ≥ 2).</p>\n        <p>Первая из них увеличивает число на экране на 1,\n           вторая умножает его на b.\n           Алгоритм для исполнителя Альфа – это последовательность номеров команд.\n           Найдите значение числа b, при котором из <b>числа {this.startNumber}</b>{' '}\n           по <b>алгоритму {this.algorithm}</b> будет получено <b>число {this.endNumber}</b>.</p>\n      </div>\n    )\n  }\n}\n\nexport default Excercise5","import React from 'react'\nimport randomWords from 'random-words'\nimport utils from '../../utils.js'\n\nclass Excercise6 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    const extensions = ['txt','doc','pdf','pptx','key']\n    const domains = ['gov','obr','state','talk','reg','tan','term']\n    const domainZones = ['ru','com','org','net','app']\n    const protocol = ['http','https','ftp','ssh']\n\n    this.filename = randomWords({ min: 1, max: 3, join: '_' })+'.'+utils.randomItem(extensions)\n    this.servername = utils.randomItem(domains)+'.'+utils.randomItem(domainZones)\n    this.protocol = utils.randomItem(protocol)\n\n    this.segments = ['/', '://', ...this.filename.split('.'), ...this.servername.split('.'), this.protocol]\n    this.segments[2] += '.'\n    this.segments[4] += '.'\n    this.segments = utils.shuffle(this.segments)\n\n    this.answer = ''\n    this.answer += this.segments.indexOf(this.protocol)+1\n    this.answer += this.segments.indexOf('://')+1\n    this.answer += this.segments.indexOf(this.servername.split('.')[0]+'.')+1\n    this.answer += this.segments.indexOf(this.servername.split('.')[1])+1\n    this.answer += this.segments.indexOf('/')+1\n    this.answer += this.segments.indexOf(this.filename.split('.')[0]+'.')+1\n    this.answer += this.segments.indexOf(this.filename.split('.')[1])+1\n    \n    this.answer = utils.encodeAnswer(this.answer)\n  }\n\n  render(){\n    return (\n      <div>\n        <p>Доступ к файлу <b>{this.filename}</b>, находящемуся на сервере <b>{this.servername}</b>,\n           осуществляется по протоколу <b>{this.protocol}</b>. Фрагменты адреса файла закодированы цифрами от 1\n           до {this.segments.length}. Запишите в ответе последовательность этих цифр, кодирующую адрес\n           указанного файла в сети Интернет.</p>\n         <List provider={this.segments} />\n      </div>\n    )\n  }\n}\n\nclass List extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    const listItems = this.props.provider.map((item, i) => <li key={i}>{item}</li>)\n    return (\n      <ol>\n        {listItems}\n      </ol>\n    )\n  }\n}\n\nexport default Excercise6","import React from 'react'\nimport randomWords from 'random-words'\nimport utils from '../../utils.js'\n\nclass Excercise8 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    const possibleTerms = [['шинель','кофта'],['рыбка','рыбак'],['башня','замок'],['лимон','лайм'],\n                          ['аэрофлот','аэропорт'],['банка','банк'],['лунка','луна'],['решето','решетка'],\n                          ['блок','блог'],['самара','саратов']]\n\n    let [term1, term2] = possibleTerms[Math.floor(Math.random()*possibleTerms.length)]\n    this.term1 = term1\n    this.term2 = term2\n\n    this.termShown = Math.floor(Math.random()*2)\n    this.requests = [this.term1+' | '+this.term2,\n                     (this.termShown?this.term1:this.term2),\n                     this.term1+' & '+this.term2]\n    this.requests = utils.shuffle(this.requests)\n\n    let pages = []\n    let pagesOverall = utils.random(5, 90)\n    for (let i = 0; i < pagesOverall; i++) {\n      switch(Math.floor(Math.random() * 3)){\n        case 0:\n          pages.push(this.term1)\n          break;\n\n        case 1:\n          pages.push(this.term2)\n          break;\n\n        case 2:\n          pages.push('both')\n          break;\n      }\n    }\n\n    this.responses = []\n    for (let request of this.requests) {\n      let termFound;\n      if(request.includes('|')){\n        termFound = pages.filter(page => [this.term1, this.term2, 'both'].includes(page)).length\n      } else if(request.includes('&')){\n        termFound = pages.filter(page => page === 'both').length\n      } else {\n        termFound = pages.filter(page => page === request).length\n      }\n      this.responses.push(termFound*10)\n    }\n\n    let or = pages.filter(page => [this.term1, this.term2, 'both'].includes(page)).length\n    let both = pages.filter(page => page === 'both').length\n    let term = pages.filter(page => page === (this.termShown?this.term1:this.term2)).length\n    this.answer = (or - term + both) * 10\n\n    this.answer = utils.encodeAnswer(this.answer)\n  }\n\n  render(){\n    return (\n      <div>\n        <p>В языке запросов поискового сервера для обозначения логической операции «ИЛИ»\n           используется символ «|», а для обозначения логической операции «И» – символ «&».</p>\n        <p>В таблице приведены запросы и количество найденных по ним страниц некоторого сегмента сети Интернет.</p>\n        <table className=\"table table-bordered\">\n         <thead>\n           <tr>\n             <th scope=\"col\">Запрос</th>\n             <th scope=\"col\">Найдено страниц (в тысячах)</th>\n           </tr>\n         </thead>\n         <tbody>\n           <tr>\n             <td><pre>{this.requests[0]}</pre></td>\n             <td><pre>{this.responses[0]}</pre></td>\n           </tr>\n           <tr>\n             <td><pre>{this.requests[1]}</pre></td>\n             <td><pre>{this.responses[1]}</pre></td>\n           </tr>\n           <tr>\n             <td><pre>{this.requests[2]}</pre></td>\n             <td><pre>{this.responses[2]}</pre></td>\n           </tr>\n         </tbody>\n       </table>\n       <p>Какое количество страниц (в тысячах) будет найдено по запросу {!this.termShown?this.term1:this.term2}?\n          Считается, что все запросы выполнялись практически одновременно, так\n          что набор страниц, содержащих все искомые слова, не изменялся за\n          время выполнения запросов.</p>\n      </div>\n    )\n  }\n}\n\nexport default Excercise8","import React from 'react'\nimport randomWords from 'random-words'\nimport utils from '../../utils.js'\nimport '../../canvas-arrow.js'\n\nconst pointNames = 'АБВГДЕЖЗИКЛМНОПРСТ'.split('')\nclass Excercise9 extends React.Component {\n  constructor (props){\n    super(props);\n    this.canvasRef = React.createRef()\n    this.canvasWidth = 800\n    this.canvasHeight = 200\n    this.verticalOffset = 20\n    this.horizontalOffset = 20\n\n    this.state = {\n      generated: false\n    }\n  }\n\n  componentDidMount(){\n    this.canvasContext = this.canvasRef.current.getContext('2d')\n    this.generateExcerciseData()\n    this.setState({generated: true})\n    this.answer = utils.encodeAnswer(this.answer)\n  }\n\n  generateInput(){\n    const format = [\n                    [{point: 'A', ref: ['B', 'D']}],\n                    [{point: 'B', ref: ['E']}, {point: 'C', ref: ['E']}, {point: 'D', ref: ['C', 'E']}],\n                    [{point: 'E', ref: ['F', 'G']}, {point: 'G', ref: ['F']}],\n                    [{point: 'F', ref: []}]\n                   ]\n    let pointIndex = -1\n    let inputLen = utils.random(4,6)\n    let input = Array(inputLen).fill().map((col, i) => {\n      return Array((i==0 || i == inputLen-1) ? 1 : utils.random(2,4)).fill().map(p => {\n        pointIndex++\n        return {point: pointNames[pointIndex], ref: []}\n      })\n    })\n\n    input.map((col, colIndex, colArray) => {\n      col.map(point => {\n        if(colIndex !== inputLen-1){\n          point.ref.push(utils.randomItem(colArray[colIndex+1]).point)\n        }\n      })\n      if(utils.random(0, 1) && col.length >= 2){\n        let point1Index = utils.random(0, col.length-1)\n        let randomSameColPoint1 = col[point1Index]\n        let randomSameColPoint2 = col[point1Index+1]\n        if(point1Index+1 >= col.length){\n          randomSameColPoint2 = col[point1Index-1]\n        }\n        randomSameColPoint1.ref.push(randomSameColPoint2.point)\n      }\n    })\n\n    return input\n  }\n\n  generateExcerciseData(){\n    this.drawEllipses()\n  }\n\n  drawEllipses(){\n    let radius = 5\n    this.canvasContext.font = \"bold 9px sans-serif\";\n    let input = this.generateInput()\n    let dataCopy = Object.assign({}, input)\n    let cols = input.length\n    let colsInterval = (this.canvasWidth-(this.horizontalOffset*2)) / cols\n    for (let [colIndex, col] of Object.entries(input)){\n      let x = colsInterval*colIndex+this.horizontalOffset\n      let points = col.length\n      let pointsInterval = ((this.canvasHeight - (2 * this.verticalOffset)) / (points + 1))\n      for (let [pointIndex, point] of Object.entries(col)){\n        pointIndex = Number(pointIndex)\n        let y = this.verticalOffset + (pointsInterval * (pointIndex+1))\n\n        this.canvasContext.fillStyle = 'black'\n        this.canvasContext.beginPath()\n        this.canvasContext.ellipse(x, y, radius, radius, Math.PI / 4, 0, 2 * Math.PI)\n        this.canvasContext.fill()\n        dataCopy[colIndex][pointIndex].coordinates = [x, y]\n\n        this.canvasContext.fillStyle = 'white'\n        this.canvasContext.fillText(point.point, x-3, y+3);\n      }\n    }\n    this.data = Object.values(dataCopy)\n    this.drawArrows()\n  }\n\n  drawArrows(){\n    let dataCopy = this.data\n    for (let col of dataCopy){\n      for (let point of col){\n        let refs = point.ref ?? []\n        for (let ref of refs){\n          let refPoint = this.getPoint(ref)\n          if(refPoint !== undefined){\n            var coordinates = point.coordinates\n            var refCoordinates = refPoint.coordinates\n            var [coordinates, refCoordinates] = utils.closePoints(coordinates, refCoordinates, 0.15)\n\n            this.canvasContext.fillStyle = 'black'\n            this.canvasContext.beginPath()\n            this.canvasContext.arrow(...coordinates, ...refCoordinates, [0, 1, -10, 1, -10, 5])\n            this.canvasContext.fill()\n          }\n        }\n      }\n    }\n  }\n\n  getPoint(pointName){\n    let points = this.getPoints()\n    return points.filter(point => point.point === pointName)[0]\n  }\n\n  getPoints(){\n    return this.data.reduce((curCol, prev) => prev.concat(curCol), []).reverse()\n  }\n\n  render(){\n    return (\n      <div>\n       {this.state.generated?\n         <>\n           <p>\n             На рисунке – схема дорог, связывающих города {pointNames.slice(0, this.getPoints().length).join(', ')}.\n             По каждой дороге можно двигаться только в одном направлении, указанном\n             стрелкой. Сколько существует различных путей из города {this.getPoints()[0].point} в город {this.getPoints().last().point}?\n           </p>\n         </>\n       :<></>}\n       <canvas width={this.canvasWidth+'px'} height={this.canvasHeight+'px'} ref={this.canvasRef}></canvas>\n      </div>\n    )\n  }\n}\n\nexport default Excercise9","import React from 'react'\nimport randomWords from 'random-words'\nimport utils from '../../utils.js'\n\nclass Excercise10 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    let decodedIntegers = Array(3).fill(Math.floor(Math.random()*1000))\n    let notations\n    this.integers = []\n    for (let integer of decodedIntegers){\n      let integerNotation = utils.random(2, 16)\n      this.integers.push({\n                          integer: integer.toString(integerNotation),\n                          notation: integerNotation\n                        })\n    }\n    this.integers = utils.shuffle(this.integers)\n\n    this.answer = Math.max(...decodedIntegers)\n    this.answer = utils.encodeAnswer(this.answer)\n  }\n\n  render(){\n    return (\n      <div>\n        <p>\n          Среди приведённых ниже трёх чисел, записанных в различных системах счисления,\n          найдите максимальное и запишите его в ответе в десятичной системе счисления.\n          В ответе запишите только число, основание системы счисления указывать не нужно.</p>\n        <pre>\n          <IntegerNotation provider={this.integers} />\n        </pre>\n      </div>\n    )\n  }\n}\n\nclass IntegerNotation extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    const listItems = this.props.provider.map((item, i, array) => { return (\n      <span key={i}>\n        <label>{item.integer}\n                        <sub>{item.notation}</sub>\n                                                  {i !== array.length-1 ? ', ' : ''}\n        </label>\n      </span>\n    )})\n    return (\n      <div>{listItems}</div>\n    )\n  }\n}\n\nexport default Excercise10","import React, { useEffect, useMemo, useState } from 'react'\nimport utils from '../../utils.js'\n\nclass Excercise11 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.answer = undefined\n  }\n\n  render(){\n    return (\n      <Excercise11Inner {...this.props} setanswer={_answer => this.answer = utils.encodeAnswer(_answer)}/>\n    )\n  }\n}\n\nfunction Excercise11Inner(props) {\n  let [extraFiles, setExtraFiles] = React.useState(false)\n  window.genCallback2 = setExtraFiles\n\n  return (\n    <>\n      { !extraFiles ?\n        (\n          <p className=\"text-warning\">Выберете выше вариант решения задач</p>\n        )\n        :\n        (\n          <Text setanswer={answer => props.setanswer(answer)} />\n        )\n      }\n    </>\n  )\n}\n\nclass Text extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    this.topFolder = utils.randomItem(Object.keys(window.appData.extraFiles))\n    let subFolders = window.appData.extraFiles[this.topFolder]\n    let subFolderFiles = utils.randomItem(Object.values(subFolders))\n    let [answer, fileContent] = utils.randomItem(Object.entries(subFolderFiles))\n    this.props.setAnswer(answer)\n    this.fileContent = fileContent\n    this.quote = utils.randomItem(fileContent.split('. '))\n  }\n\n  render(){\n    return (\n      <p>\n        В одном из файлов, текст которого приведён в подкаталоге каталога <b>{this.topFolder}</b>,\n        находятся такие слова: «{this.quote}».\n        С помощью поисковых средств операционной системы и текстового редактора или браузера\n        выясните имя файла без пути к нему, только имя с расширением. Например, <i>example.txt</i>\n      </p>\n    )\n  }\n}\n\nexport default Excercise11","import React, { useEffect, useMemo, useState } from 'react'\nimport utils from '../../utils.js'\n\nclass Excercise12 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.answer = undefined\n  }\n\n  render(){\n    return (\n      <Excercise12Inner {...this.props} setanswer={_answer => this.answer = utils.encodeAnswer(_answer)}/>\n    )\n  }\n}\n\nfunction Excercise12Inner(props) {\n  let [extraFiles, setExtraFiles] = React.useState(false)\n  window.genCallback = setExtraFiles\n\n  return (\n    <>\n      { !extraFiles ?\n        (\n          <p className=\"text-warning\">Выберете выше вариант решения задач</p>\n        )\n        :\n        (\n          <Text setanswer={answer => props.setanswer(answer)} />\n        )\n      }\n    </>\n  )\n}\n\nclass Text extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n  }\n\n  generateExcerciseData(){\n    this.extension = utils.randomItem(window.appData.extraFileExtensions)\n    this.topFolder = utils.randomItem(Object.keys(window.appData.extraFiles))\n    let subFolders = window.appData.extraFiles[this.topFolder]\n    let answer = 0\n    for (let folder of Object.keys(subFolders)){\n      let filenames = Object.keys(subFolders[folder])\n      let regex = new RegExp('^.*\\\\'+this.extension+'$')\n      answer += filenames.filter(filename => regex.test(filename)).length\n    }\n    this.props.setAnswer(answer)\n  }\n\n  render(){\n    return (\n      <p>\n        Сколько файлов с расширением {this.extension} содержится в подкаталогах каталога\n        {' '}<b>{this.topFolder}</b>? В ответе укажите только число.\n      </p>\n    )\n  }\n}\n\nexport default Excercise12","import Table from '@editorjs/table'\nimport Underline from '@editorjs/underline'\nimport Paragraph from '@editorjs/paragraph'\n\nexport const EDITOR_JS_TOOLS = {\n  underline: {\n    class: Underline,\n    inlineToolbar: true,\n    shortcut: 'CMD+U'\n  },\n  table: {\n    class: Table,\n    inlineToolbar: true,\n    config: {\n      rows: 2,\n      cols: 3,\n    },\n  },\n  paragraph: {\n    class: Paragraph,\n    inlineToolbar: true,\n  }\n}","import React, { useEffect, useMemo, useState } from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport utils from '../../utils.js'\nimport ryba from 'ryba-js'\nimport ReactMarkdown from 'react-markdown'\nimport underline from 'remark-underline'\nimport html from 'remark-html'\nimport html2canvas from 'html2canvas'\nimport { Card, CardBody } from 'reactstrap'\nimport EditorJs from 'react-editor-js';\nimport { EDITOR_JS_TOOLS } from './jseditor_tools'\n\nclass Excercise13 extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.generateExcerciseData()\n    this.answer = utils.encodeAnswer(this.answer)\n  }\n\n  generateExcerciseData(){\n\n  }\n\n  render(){\n    const tdstyles = {flex: 0, padding: 0, paddingRight: '15px'}\n\n    return (\n      <div style={{overflow: 'auto'}}>\n        <p>\n          Создайте в текстовом редакторе документ и напишите в нём следующий текст, точно воспроизведя\n          всё оформление текста, имеющееся в образце. Данный текст должен быть набран шрифтом обычного\n          размера. Отступ первой строки первого абзаца основного текста – 8 пробелов.\n          Расстояние между строками текста — одинарный межстрочный интервал.\n        </p>\n        <p>\n          Основной текст выровнен по ширине; заголовок и текст в ячейках таблицы – по центру. В основном\n          тексте и таблице есть слова, выделенные полужирным или курсивным шрифтом.\n        </p>\n        <p>\n          Интервал между текстом и таблицей не более 1 межабзацного интервала\n        </p>\n        <Card>\n          <CardBody>\n            <Text />\n          </CardBody>\n        </Card>\n        <p></p>\n        <Card>\n          <CardBody>\n            <EditorJs logLevel='ERROR' tools={EDITOR_JS_TOOLS} inlineToolbar={['bold','italic','underline']}\n              i18n={{\n                messages: {\n                  toolNames: {\n                    \"Bold\": \"Жирный\",\n                    \"Italic\": \"Курсив\",\n                    \"Underline\": \"Подчеркивание\",\n                    \"Table\": \"Таблица\",\n                    \"Text\": \"Абзац\"\n                  },\n                  ui: {\n                    \"blockTunes\": {\n                      \"toggler\": {\n                        \"Click to tune\": \"Нажмите, чтобы настроить\",\n                        \"or drag to move\": \"или перетащите\"\n                      },\n                    },\n                    \"toolbar\": {\n                      \"toolbox\": {\n                        \"Add\": \"Добавить\"\n                      }\n                    }\n                  },\n                  blockTunes: {\n                    \"delete\": {\n                      \"Delete\": \"Удалить\"\n                    },\n                    \"moveUp\": {\n                      \"Move up\": \"Переместить вверх\"\n                    },\n                    \"moveDown\": {\n                      \"Move down\": \"Переместить вниз\"\n                    }\n                  }\n                }\n              }}\n              placeholder='Введите текст здесь...'/>\n          </CardBody>\n        </Card>\n      </div>\n    )\n  }\n}\n\nclass Text extends React.Component {\n  constructor (props){\n    super(props);\n    this.state = {\n      text: 'Загрузка...',\n      canvas: <span></span>\n    }\n    this.markdownRef = React.createRef()\n  }\n\n  componentDidMount(){\n    this.fetchRandomText()\n  }\n\n  fetchRandomText(){\n    const max_length = 400\n    let text = ryba(10).substring(0, max_length).split('.')\n    text.pop()\n    text = text.join('.')+'.'\n    const border = '1px solid #dbdbe2'\n    const cell = {\n      borderTop: border,\n      borderLeft: border,\n      padding: '10px'\n    }\n    this.update(ReactDOMServer.renderToString(\n      <div id='render-it'>\n        <ReactMarkdown allowDangerousHtml>{this.format(text)}</ReactMarkdown>\n        <table style={{width: '100%', borderBottom: border, borderRight: border, borderRadius: '5px 5px 5px 5px'}}>\n          <tr>\n            <th style={{...cell, borderRadius: '5px 0 0 0'}}>Вещество</th>\n            <th style={cell}>Плотность</th>\n            <th style={{...cell, borderRadius: '0 5px 0 0'}}>Теплоемкость</th>\n          </tr>\n          <tr>\n            <td style={cell}>Графит</td>\n            <td style={cell}>2100</td>\n            <td style={cell}>700</td>\n          </tr>\n          <tr>\n            <td style={{...cell, borderRadius: '0 0 0 5px'}}>Алмаз</td>\n            <td style={cell}>3500</td>\n            <td style={{...cell, borderRadius: '0 0 5px 0'}}>1000</td>\n          </tr>\n        </table>\n      </div>))\n  }\n\n  format(text) {\n    let textSplitted = text.split(' ')\n    for (let i = 0; i < Math.ceil(Math.random()*5); i++) {\n      let word_index = Math.floor(Math.random()*textSplitted.length)\n      if(!/^\\*([^\\*]*)\\*$/.test(textSplitted[word_index]))\n        textSplitted[word_index] = `*${textSplitted[word_index]}*`\n    }\n    for (let i = 0; i < Math.ceil(Math.random()*5); i++) {\n      let word_index = Math.floor(Math.random()*textSplitted.length)\n      if(!/^\\*\\*([^\\*]*)\\*\\*$/.test(textSplitted[word_index]))\n        textSplitted[word_index] = `**${textSplitted[word_index]}**`\n    }\n    for (let i = 0; i < Math.ceil(Math.random()*5); i++) {\n      let word_index = Math.floor(Math.random()*textSplitted.length)\n      if(!/^__([^_]*)__$/.test(textSplitted[word_index]))\n        textSplitted[word_index] = `<u>${textSplitted[word_index]}</u>`\n    }\n    return textSplitted.join(' ')\n  }\n\n  update(renderedMarkdown) {\n    window.rer = html2canvas\n    let component = document.querySelector('#react-markdown')\n    let componentMarkdown = document.createElement('p')\n    component.appendChild(componentMarkdown)\n    componentMarkdown.outerHTML = renderedMarkdown\n    let componentContent = document.querySelector('#react-markdown > div#render-it')\n    let componentCanvas = document.querySelector('#react-markdown > canvas')\n    let currentScroll = window.scrollY\n    window.scrollTo({top:0,behavior: 'instant'})\n    window.document.body.style.overflow = 'hidden'\n    html2canvas(componentContent).then(function(canvas) {\n      component.appendChild(canvas)\n      componentContent.remove()\n      window.scrollTo({top:currentScroll, behavior: 'instant'})\n      window.document.body.style.overflow = 'auto'\n    });\n  }\n\n  render(){\n    return (\n      <p className='utils--no-margin-bottom' id='react-markdown'>\n\n      </p>\n    )\n  }\n}\n\nexport default Excercise13","import React, { useState } from 'react'\nimport utils from '../../utils.js'\nimport { Button, Card, CardBody, InputGroup, InputGroupText, Input } from 'reactstrap'\nimport { saveAs } from 'file-saver';\nimport XLSX from 'xlsx'\n\nconst subjects = ['Физкультура','Математика','Русский язык','Биология','Обществознание','Информатика']\nclass Excercise14 extends React.Component {\n  constructor (props){\n    super(props);\n    this.generateExcerciseData()\n\n    this.answer14_1 = utils.encodeAnswer(this.condition[0].answer)\n    this.answer14_2 = utils.encodeAnswer(this.condition[1].answer)\n  }\n\n  generateExcerciseData(){\n    const _randomIntegerValue = '/random/'\n    const possibleColumns = [\n      {\n        names: ['Округ', 'Фамилия', 'Предмет', 'Баллы'],\n        descriptions: ['код округа, в котором учится ученик', 'фамилия', 'выбранный учеником предмет', 'тестовый балл'],\n        possibleColumnsContent: [\n          ['С','Ю','З','В','СЗ','СВ','ЮЗ','ЮВ'],\n          ['Смирнов','Иванов','Кузнецов','Соколов','Попов','Лебедев','Козлов','Новиков','Морозов','Петров','Волков',\n           'Соловьёв','Васильев','Зайцев','Павлов','Семёнов','Голубев','Виноградов','Богданов','Воробьёв','Фёдоров',\n           'Михайлов','Беляев','Тарасов','Белов','Комаров','Орлов','Киселёв','Макаров','Андреев','Ковалёв','Ильин'],\n          subjects,\n          _randomIntegerValue\n        ]\n      }\n    ]\n    let columns = utils.randomItem(possibleColumns)\n    this.columns = columns\n    let data = Array(utils.random(1,10)*100).fill().map(() => {\n      let row = []\n      for (let col of columns.possibleColumnsContent){\n        if(col === _randomIntegerValue){\n          row.push(utils.random(1, 1000))\n        } else {\n          row.push(utils.randomItem(col))\n        }\n      }\n      return row\n    })\n    data.unshift(columns.names)\n    this.data = data\n\n    this.generateTable()\n    this.generateTasks()\n  }\n\n  generateTable(){\n    let columns = this.columns\n    let content = []\n    let data = this.data\n    const letters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n    for (let [i, description] of Object.entries(columns.descriptions)){\n      let letter = letters.charAt(i)\n\n      content.push(<div key={i}>В столбце {letter} {i==0?'записан':'—'} {description}{i==columns.descriptions.length-1?'.':';'}</div>)\n    }\n    this.contentColumns = content\n    this.tablePreview = <table className=\"table table-bordered\">\n      <thead>\n        <tr className='table-light'>\n          <th></th>\n          {letters.split('').slice(0,columns.names.length).map((el, i) => {return (<th key={i} scope='col'>{el}</th>)})}\n        </tr>\n      </thead>\n      <tbody>\n        {\n          Array(5).fill().map((el, i) => {\n            return (\n              <tr>\n                <th className='table-light'>{i+1}</th>\n                {Array(columns.names.length).fill().map((el, j) => {\n                  return (i==0?<th>{data[i][j]}</th>:<td>{data[i][j]}</td>)\n                })}\n              </tr>\n            )\n          })\n        }\n        <tr>\n          <td colspan={data[0].length+1}>\n            <p className='text-secondary text-center' style={{margin: 0}}>Еще {data.length-1-5} строк...</p>\n          </td>\n        </tr>\n      </tbody>\n    </table>\n  }\n\n  generateTasks(){\n    let data = this.data\n    this.condition = [\n      {\n        subjectName: utils.randomItem(subjects),\n        limit: utils.random(1, 1000),\n        limitComparison: utils.randomItem('>', '<')\n      },\n      {\n        subjectName: utils.randomItem(subjects)\n      }\n    ]\n\n    const scoreIndex = 3\n    this.condition[0].answer = data.filter(row => {\n      if(row[scoreIndex] > this.condition[0].limit) return (this.condition[0].limitComparison === '>')\n      if(row[scoreIndex] < this.condition[0].limit) return (this.condition[0].limitComparison === '<')\n    }).length\n\n    const subjectIndex = 2\n    let students = data.map(row => {\n      if(row[subjectIndex] == this.condition[1].subjectName){\n        return row[scoreIndex]\n      }\n    }).filter(row => row !== undefined)\n    let studentsSum = students.reduce((last, cur) => last+cur, 0)\n    this.condition[1].answer = (studentsSum / students.length).toFixed(2)\n\n    this.tasks = <ol>\n      <li>\n        <p>\n          Сколько учеников, которые проходили тестирование по предмету {this.condition[0].subjectName},\n          набрали {(this.limitComparison==='<'?'менее':'более')} {this.condition[0].limit} баллов?\n        </p>\n        <Answer number={'14.1'} />\n      </li>\n      <li style={{marginTop: '20px'}}>\n        <p>\n          Каков средний тестовый балл учеников, которые проходили тестирование по\n          предмету {this.condition[1].subjectName}?\n          Ответ запишите с 2 знаками после запятой (например 50.00)\n        </p>\n        <Answer number={'14.2'} />\n      </li>\n    </ol>\n  }\n\n  generateSheet(data){\n    let worksheet = XLSX.utils.aoa_to_sheet(this.data)\n    let workbook = XLSX.utils.book_new()\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Exercise 14\");\n\n    let wopts = { bookType: 'xlsx', \n                  bookSST: false, \n                  type: 'array' }\n    this.wbout = XLSX.write(workbook, wopts)\n\n    this.download()\n  }\n\n  startDownloading(){\n    if(this.wbout){\n      this.download()\n    } else {\n      this.generateSheet()\n    }\n  }\n\n  download(){\n    saveAs(new Blob([this.wbout], {type: \"application/octet-stream\"}), \"Exercise14.xlsx\")\n  }\n\n  render(){\n    return (\n      <div>\n        <Card>\n          <CardBody>\n            <div style={{display: 'inline-block', verticalAlign: 'middle'}}>Скачайте таблицу для Microsoft Excel для работы с заданием 14:</div>\n            {'  '}\n            <Button color='primary' onClick={() => this.startDownloading()}>Скачать XLSX</Button>\n          </CardBody>\n        </Card>\n        <p></p>\n        <p>\n          В электронную таблицу занесли данные о тестировании учеников\n          по выбранным ими предметам.\n        </p>\n        <div>\n          {this.tablePreview}\n        </div>\n        <p>\n          {this.contentColumns}\n        </p>\n        <p>\n          Всего в электронную таблицу были занесены данные по {this.data.length-1} учеников.\n        </p>\n        <p>\n          Откройте файл с данной электронной таблицей (скачать его вы можете выше).\n          На основании данных, содержащихся в этой таблице, выполните задания.\n        </p>\n        <div>\n          {this.tasks}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Answer extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  handleInput(e){\n    window.appData.answers[this.props.number] = e.currentTarget.value\n  }\n\n  render(){\n    return (\n      <InputGroup>\n        <InputGroupText>Ответ</InputGroupText>\n        <Input onInput={e => this.handleInput(e)}/>\n      </InputGroup>\n    )\n  }\n}\n\nexport default Excercise14","import React from 'react'\nimport { Button, InputGroup, InputGroupText, Input } from 'reactstrap'\nimport styles from '../styles/Excercises.style.js'\nimport '../styles/Excercises.css'\nimport Excercise1 from './Excercises/Excercise1.react.js'\nimport Excercise2 from './Excercises/Excercise2.react.js'\nimport Excercise3 from './Excercises/Excercise3.react.js'\nimport Excercise4 from './Excercises/Excercise4.react.js'\nimport Excercise5 from './Excercises/Excercise5.react.js'\nimport Excercise6 from './Excercises/Excercise6.react.js'\nimport Excercise7 from './Excercises/Excercise7.react.js'\nimport Excercise8 from './Excercises/Excercise8.react.js'\nimport Excercise9 from './Excercises/Excercise9.react.js'\nimport Excercise10 from './Excercises/Excercise10.react.js'\nimport Excercise11 from './Excercises/Excercise11.react.js'\nimport Excercise12 from './Excercises/Excercise12.react.js'\nimport Excercise13 from './Excercises/Excercise13.react.js'\nimport Excercise14 from './Excercises/Excercise14.react.js'\nimport Excercise15 from './Excercises/Excercise15.react.js'\n\nclass Excercises extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    let excercisesComponents = []\n    for (let i = this.props.start; i <= this.props.end; i++) {\n      excercisesComponents.push(<Excercise number={i} key={i}/>)\n    }\n\n    return (\n      <div>\n        {excercisesComponents}\n      </div>\n    )\n  }\n}\n\nconst hideAnswerInput = [13, 14, 15]\nclass Excercise extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div style={styles.excerciseOuter}>\n        <div style={styles.excerciseIndex}>{this.props.number}</div>\n        <div style={styles.excerciseInner}>\n          <ExcerciseText number={this.props.number} />\n          {!hideAnswerInput.includes(this.props.number)?(<ExcerciseAnswer number={this.props.number} />):(<></>)}\n        </div>\n      </div>\n    )\n  }\n}\n\nclass ExcerciseText extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    let e = getExcercise(this.props.number)\n    window.appData.components[this.props.number] = e\n    return e\n  }\n}\n\nwindow.appData = {}\nwindow.appData.components = Array(16).fill().map(r => React.createRef())\nfunction getExcercise(number){\n  switch(number){\n    case 1:\n      return <Excercise1 ref={window.appData.components[1]}/>\n\n    case 2:\n      return <Excercise2 ref={window.appData.components[2]}/>\n\n    case 3:\n      return <Excercise3 ref={window.appData.components[3]}/>\n\n    case 4:\n      return <Excercise4 ref={window.appData.components[4]}/>\n\n    case 5:\n      return <Excercise5 ref={window.appData.components[5]}/>\n\n    case 6:\n      return <Excercise6 ref={window.appData.components[6]}/>\n\n    case 7:\n      return <Excercise7 ref={window.appData.components[7]}/>\n\n    case 8:\n      return <Excercise8 ref={window.appData.components[8]}/>\n\n    case 9:\n      return <Excercise9 ref={window.appData.components[9]}/>\n\n    case 10:\n      return <Excercise10 ref={window.appData.components[10]}/>\n\n    case 11:\n      return <Excercise11 ref={window.appData.components[11]}/>\n\n    case 12:\n      return <Excercise12 ref={window.appData.components[12]}/>\n\n    case 13:\n      return <Excercise13 ref={window.appData.components[13]}/>\n\n    case 14:\n      return <Excercise14 ref={window.appData.components[14]}/>\n\n    case 15:\n      return <Excercise15 ref={window.appData.components[15]}/>\n\n    default:\n      return <p>?</p>\n  }\n}\n\nwindow.appData.answers = {}\nclass ExcerciseAnswer extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  handleInput(e){\n    window.appData.answers[this.props.number] = e.currentTarget.value\n  }\n\n  render(){\n    return (\n      <InputGroup>\n        <InputGroupText>Ответ</InputGroupText>\n        <Input onInput={e => this.handleInput(e)}/>\n      </InputGroup>\n    )\n  }\n}\n\nexport default Excercises;","import React, { useState } from 'react'\nimport { BsHash, BsCheck, BsX } from \"react-icons/bs\"\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, Fade } from 'reactstrap'\nimport utils from '../utils.js'\n\nlet _setModal;\nlet _validate;\nconst ModalValidate = (props) => {\n  const {\n    buttonLabel,\n    className\n  } = props;\n\n  const [modal, setModal] = useState(false);\n  _setModal = setModal\n  const toggle = () => setModal(!modal);\n\n  return (\n    <div>\n      <Modal isOpen={modal} toggle={toggle}>\n        <ModalHeader toggle={toggle}>Сдать вариант?</ModalHeader>\n        <ModalBody>\n          Вы уверены, что хотите сдать вариант? Вы не сможете изменить свои ответы.\n        </ModalBody>\n        <ModalFooter>\n          <Button color=\"light\" onClick={toggle}>Отмена</Button>{' '}\n          <Button color=\"primary\" onClick={_validate}>Сдать вариант</Button>\n        </ModalFooter>\n      </Modal>\n    </div>\n  );\n}\n\nclass AnswerChecker extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.state = {\n      validationStarted: false,\n      validationEnded: false,\n      validationData: undefined\n    }\n    this.revalidationProtection = false\n\n    _validate = () => {\n      this.setState({validationStarted: true})\n      this.checkAnswers()\n    }\n  }\n\n  validate(){\n    _setModal(true)\n  }\n\n  checkAnswers(){\n    if(this.revalidationProtection){return;}\n    this.revalidationProtection = true;\n    _setModal(false)\n    let data = [];\n    for (let i = 1; i <= 13; i++){\n      let correctAnswer = window.appData.components[i].ref.current.answer\n      let userAnswer = window.appData.answers[i] ?? ''\n      userAnswer = utils.encodeAnswer(userAnswer)\n      let isCorrect = false\n      if(Array.isArray(correctAnswer)){\n        isCorrect = correctAnswer.some(ans => ans===userAnswer)\n      } else {\n        isCorrect = correctAnswer===userAnswer\n      }\n      data.push({index: i, isCorrect: isCorrect})\n    }\n\n    let correctAnswer14_1 = window.appData.components[14].ref.current.answer14_1\n    let userAnswer14_1 = window.appData.answers[14.1] ?? ''\n    userAnswer14_1 = utils.encodeAnswer(userAnswer14_1)\n\n    let correctAnswer14_2 = window.appData.components[14].ref.current.answer14_2\n    let userAnswer14_2 = window.appData.answers[14.2] ?? ''\n    userAnswer14_2 = utils.encodeAnswer(userAnswer14_2)\n\n    let isCorrect14_1 = correctAnswer14_1===userAnswer14_1\n    let isCorrect14_2 = correctAnswer14_2===userAnswer14_2\n    data.push({\n      index: 14,\n      isCorrect14_1: isCorrect14_1,\n      isCorrect14_2: isCorrect14_2,\n      isCorrect: isCorrect14_1+isCorrect14_2 > 0\n    })\n\n    let tests = window.appData.components[15].ref.current.testUserSolution()\n    let testCorrect = Boolean(tests)\n    data.push({index: 15, isCorrect: testCorrect, allTestsPassing: tests===true})\n    this.setState({validationEnded: true, validationData: data})\n  }\n\n  render(){\n    const outerStyles = {\n      width: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center',\n      marginBottom: '50px'\n    }\n\n    return (\n      <div style={outerStyles}>\n        <Button color='primary' onClick={() => this.validate()} disabled={this.state.validationStarted}>Сдать вариант</Button>\n        <ModalValidate />\n        {this.state.validationEnded?\n          <ValidationResults provider={this.state.validationData}/>\n        :<></>}\n      </div>\n    )\n  }\n}\n\nclass ValidationResults extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    const indicator = {\n      'padding': '3px',\n      'border-radius': '999px',\n      'display': 'flex',\n      'justify-content': 'center',\n      'align-items': 'center',\n      'color': '#fff',\n      'width': '22px',\n      'margin-right': '5px'\n    }\n    const correct = {\n      ...indicator,\n      'background-color': '#03b903'\n    }\n    const incorrect = {\n      ...indicator,\n      'background-color': '#b90c03'\n    }\n    const semiCorrectIndicator = {\n      ...indicator,\n      'background-color': '#b99b03'\n    }\n\n    const oneScoredExcercises = 12\n    const doubleScoredExcercises = 15\n    const threeScoredExcercise = 14\n    const oneScore = 1\n    const doubleScore = 2\n\n    let excercises = []\n    let score = 0\n    for (let excercise of this.props.provider) {\n      let excerciseIndex = excercise.index\n      let isCorrect = excercise.isCorrect\n      let semiCorrect = undefined\n      if(isCorrect){\n        if(excerciseIndex <= oneScoredExcercises){\n          score += oneScore\n        } else if (excerciseIndex == threeScoredExcercise) {\n          score += 1\n          if(excercise.isCorrect14_1){\n            score += 1\n          }\n          if(excercise.isCorrect14_2){\n            score += 1\n          }\n          if(excercise.isCorrect14_1+excercise.isCorrect14_2 === 1){\n            semiCorrect = true\n          }\n        } else if (excerciseIndex == 15) {\n          score += 1\n          if(excercise.allTestsPassing){\n            score += 1\n          } else {\n            semiCorrect = true\n          }\n        } else if (excerciseIndex <= doubleScoredExcercises) {\n          score += doubleScore\n        }\n      }\n\n      let validationStatus = (isCorrect ?\n                                (semiCorrect?\n                                  (<div key={excerciseIndex} style={semiCorrectIndicator}><BsHash /></div>)\n                                :\n                                  (<div key={excerciseIndex} style={correct}><BsCheck /></div>)\n                                )\n                             :\n                             (<div key={excerciseIndex} style={incorrect}><BsX /></div>))\n      excercises.push(\n        <tr>\n          <td>{validationStatus}</td>\n          <td style={{padding: '0 20px'}}>{excerciseIndex}</td>\n          <td>Ваш ответ {isCorrect?(semiCorrect?'частично ':''):'не'}правильный</td>\n        </tr>\n      )\n    }\n    const maxScore = 19\n    let scoreLabel = `${score} балл${utils.ending(score)} из ${maxScore}`\n    let grade = 0\n    let percentage = score/maxScore*100\n\n    // В соответствии с https://ru.wikipedia.org/wiki/Система_оценивания_знаний#Россия\n    if (percentage >= 85) {\n      grade = 5\n    } else if (percentage >= 65) {\n      grade = 4\n    } else if (percentage >= 45) {\n      grade = 3\n    } else {\n      grade = 2\n    }\n\n    return (\n      <>\n        <Fade in={true} tag=\"div\" style={{'margin-top': '25px'}}>\n          <div>\n            <table borderless>\n              <tbody>\n                {excercises}\n                <tr>\n                  <td colSpan={3} style={{\n                      'padding-top': '20px',\n                      'color': '#0d6efd',\n                      'text-align': 'center'\n                    }}>\n                    {scoreLabel} (Оценка {grade})\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </Fade>\n      </>\n    )\n  }\n}\n\nexport default AnswerChecker","import JSZip from 'jszip'\nimport utils from './utils.js'\nimport ryba from 'ryba-js'\nimport { saveAs } from 'file-saver';\n\nconst folderNames = ['видения', 'новелла', 'ода', 'опус', 'очерк', 'поэма', 'повесть',\n'пьеса', 'рассказ', 'роман', 'скетч', 'эпопея', 'эпос', 'эссе', 'комедия', 'фарс', 'водевиль',\n'интермедия', 'скетч', 'пародия', 'комедия положений', 'комедия характеров', 'трагедия', 'драма',\n'ужасы', 'эпические', 'басня', 'аполог', 'былина', 'баллада', 'миф', 'новелла', 'повесть', 'рассказ',\n'роман', 'роман-эпопея', 'сказка', 'эпопея', 'лирические', 'ода', 'послание', 'элегия', 'эпиграмма',\n'лиро-эпические', 'стансы', 'баллада', 'поэма', 'драматические', 'драма', 'комедия', 'трагедия']\n\nconst extensions = ['.txt', '.text', '.rtf', '.html', '.log']\nwindow.appData.extraFileExtensions = extensions\n\nconst ExtraFiles = {\n  startGeneration: function(){\n    window.appData.extraFilesSetState('loading')\n\n    window.appData.extraFilesDownloading = {\n      timerOut: false,\n      generated: false\n    }\n\n    setTimeout(() => {\n      window.appData.extraFilesDownloading.timerOut = true\n      this.endGeneration()\n    }, 1000)\n\n    this.generate().then(() => {\n      window.appData.extraFilesDownloading.generated = true\n      this.endGeneration()\n    })\n  },\n\n  endGeneration: function(){\n    if(window.appData.extraFilesDownloading.timerOut && window.appData.extraFilesDownloading.generated){\n      this.download()\n      window.appData.extraFilesSetState('downloaded')\n    }\n  },\n\n  generate: function(){\n    return new Promise((resolve, reject) => {\n      if(!window.appData.extraFiles){\n        window.appData.extraFiles = {}\n        let topFolders = Array(utils.random(3, 6)).fill('').map(el => utils.capitalize(utils.randomItem(folderNames)))\n        for (let topFolderName of topFolders){\n          window.appData.extraFiles[topFolderName] = {}\n          let topFolderRef = window.appData.extraFiles[topFolderName]\n\n          let subFolders = Array(utils.random(4, 12)).fill('').map(el => {\n            let subFolderName = ryba(1)\n            subFolderName = utils.capitalize(subFolderName)\n            subFolderName = utils.toPureLabel(subFolderName)\n            subFolderName = utils.wordsLimit(subFolderName, 1)\n            return subFolderName\n          })\n          for (let subFolderName of subFolders){\n            topFolderRef[subFolderName] = {}\n            let subfolderRef = topFolderRef[subFolderName]\n\n            let files = Array(utils.random(5, 15)).fill('').map(el => {\n              let filename = ryba(1)\n              filename = utils.capitalize(filename)\n              filename = utils.toPureLabel(filename)\n              filename = utils.wordsLimit(filename, utils.random(1, 3))\n              filename = filename.replace(/ /gu, '_')\n              filename += utils.randomItem(extensions)\n              return filename\n            })\n            for (let fileName of files) {\n              let fileContent = ryba(utils.random(10, 50))\n              subfolderRef[fileName] = fileContent\n            }\n          }\n        }\n        window.genCallback(true)\n        window.genCallback2(true)\n        resolve()\n      } else {\n        reject()\n      }\n    });\n  },\n\n  download: function(){\n    let zip = new JSZip();\n    for (let [topFolderName, subFolders] of Object.entries(window.appData.extraFiles)){\n      let topFolderRef = zip.folder(topFolderName)\n      for (let [subFolderName, subFolderContent] of Object.entries(subFolders)){\n        let subFolderRef = topFolderRef.folder(subFolderName)\n        for (let [fileName, fileContent] of Object.entries(subFolderContent)){\n          subFolderRef.file(fileName, `${fileContent}\\n`)\n        }\n      }\n    }\n    zip.generateAsync({type:\"blob\"})\n    .then(function(content) {\n        saveAs(content, \"Дополнительные_Файлы.zip\");\n    });\n  }\n}\n\nwindow.ExtraFiles = ExtraFiles\n\nexport default {}","import React from 'react'\nimport ReactDOMServer from 'react-dom/server'\nimport styles from '../styles/GeneratedResultsScreen.style.js'\nimport { BsCheck, BsClipboard } from \"react-icons/bs\"\nimport { Alert, Button, Card, CardBody, Progress } from 'reactstrap'\nimport Excercises from './Excercises.react.js'\nimport AnswerChecker from './AnswerChecker.react.js'\nimport '../extraFiles.js'\nimport utils from '../utils.js'\n\nlet seed;\n\nclass GeneratedResultsScreen extends React.Component {\n  constructor (props){\n    super(props);\n\n    seed = this.props.seed;\n  }\n\n  render(){\n    return (\n      <>\n        <Header seedRef={this.props.seedRef}/>\n        <GeneratedExcercises />\n      </>\n    )\n  }\n}\n\nclass Header extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div style={styles.header}>\n        <label>\n          <label>Сид рандомайзера: {seed}</label>\n          <label className=\"text-warning\">{this.props.seedRef?.current?.value !== ''?' (установлен вручную)':''}</label>\n          <Copy seed={seed}/>\n        </label>\n      </div>\n    )\n  }\n}\n\nclass Copy extends React.Component {\n  constructor (props){\n    super(props);\n\n    this.state = {\n      copied: false\n    }\n  }\n\n  copySeed(e){\n    e.stopPropagation()\n    e.nativeEvent.stopImmediatePropagation()\n    if(e.target === e.currentTarget){\n      this.setState({copied: true})\n      utils.copyText(this.props.seed)\n    }\n  }\n\n  render(){\n    return (\n      <div style={styles.button}>\n        <Button color=\"light\" onClick={e => this.copySeed(e)}>\n          {this.state.copied?<BsCheck />:<BsClipboard />}\n        </Button>\n      </div>\n    )\n  }\n}\n\nclass GeneratedExcercises extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div className=\"container\" style={{'margin-top': '1em'}}>\n        <div className=\"row\">\n          <div className=\"col\">{' '}</div>\n            <div className=\"col-10\">\n              <Section number={1} />\n              <Section number={2} />\n              <AnswerChecker />\n            </div>\n          <div className=\"col\">{' '}</div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst sections_excersices = {1: {start: 1, end: 10}, 2: {start: 11, end: 15}}\nclass Section extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    const excercisesIndexes = sections_excersices[this.props.number]\n\n    return (\n      <>\n        <SectionName {...this.props}/>\n        <SectionInstructions {...this.props}/>\n        <Excercises start={excercisesIndexes['start']} end={excercisesIndexes['end']} />\n      </>\n    )\n  }\n}\n\nclass SectionName extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <div className=\"row justify-content-center\">\n        <h2>Часть {this.props.number}</h2>\n      </div>\n    )\n  }\n}\n\nconst section1_instructions = 'Ответами к заданиям 1–10 являются число, слово, последовательность букв или цифр.\\\n                               Ответы укажите в поле для ответов под заданием рядом с текстом задания на этой же\\\n                               страницы, введя ответ с клавиатуры, без пробелов, запятых и других дополнительных\\\n                               символов.'\n\nconst section2_instructions = 'Задания этой части (11–15) решаются вами на компьютере. Для выполнения заданий\\\n                               11, 12 вам нужно будет выбрать один из способов представленных ниже. Ответами\\\n                               к заданиям 11, 12 являются слово или число, которые следует записать в поле для\\\n                               ответов. Результатом выполнения заданий 13–15 является отдельный файл\\\n                               (для одного задания – один файл).\\\n                               Файл проверяется системой на правильность после сдачи.'\n\nconst sectionInstructionsText = {\n  1: section1_instructions,\n  2: section2_instructions\n}\n\nclass SectionInstructions extends React.Component {\n  constructor (props){\n    super(props);\n  }\n\n  render(){\n    return (\n      <>\n        <Alert color=\"primary\">\n          {sectionInstructionsText[this.props.number]}\n        </Alert>\n        {this.props.number === 2?(<ExtraFiles />):(<></>)}\n      </>\n    )\n  }\n}\n\nclass ExtraFiles extends React.Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      windowPhase: 'default'\n    }\n    window.appData.extraFilesSetState = (value) => this.setState({windowPhase: value})\n  }\n\n  loaded(){\n    this.size = '1 МБ'\n    let downloadButton = <Button color='success' id='button-downloader' extra-files-action-button>Скачать zip</Button>\n    let downloaderButton = document.querySelector('#accordion').contentDocument.querySelector('#button-downloader')\n    downloaderButton.outerHTML = ReactDOMServer.renderToString(downloadButton)\n    downloaderButton = document.querySelector('#accordion').contentDocument.querySelector('#button-downloader')\n    downloaderButton.setAttribute('onclick', '__medprovider__(\\'download\\')')\n\n    let startButton = <Button color='success' id='button-browser' extra-files-action-button>Запустить браузер</Button>\n    let buttonStarter = document.querySelector('#accordion').contentDocument.querySelector('#button-browser')\n    buttonStarter.outerHTML = ReactDOMServer.renderToString(startButton)\n    buttonStarter = document.querySelector('#accordion').contentDocument.querySelector('#button-browser')\n    buttonStarter.setAttribute('onclick', '__medprovider__(\\'start_browser\\')')\n  }\n\n  render(){\n    return (\n      <>\n        <Card>\n          <CardBody>\n            <div>\n              {this.state.windowPhase === 'default' ?\n                (\n                  <>\n                    <p>Для выполнения заданий 11, 12 выберете один из двух вариантов. Вы можете выбрать лишь один раз.</p>\n                    <iframe src=\"/accordion.html\" width='100%' height='270px' id='accordion' onLoad={() => this.loaded()}/>\n                  </>\n                )\n                :\n                (\n                  this.state.windowPhase === 'loading' ?\n                    (\n                      <div>\n                        <p>Архив создается и запаковывается...</p>\n                        <Progress value={0} />\n                      </div>\n                    )\n                    :\n                    (\n                      this.state.windowPhase === 'browser' ?\n                        (\n                          <p> todo: file browser </p>\n                        )\n                        :\n                        (\n                          <div style={{display: 'flex', alignItems: 'center', gap: '10px'}}>\n                            <label>Вы выбрали <b>Скачать архив</b>. </label>\n                            <Button color='primary' onClick={() => window.ExtraFiles.download()}>Скачать снова</Button>\n                          </div>\n                        )\n                    )\n                )\n              }\n            </div>\n          </CardBody>\n        </Card>\n        <p></p>\n      </>\n    )\n  }\n}\n\nexport default GeneratedResultsScreen;","import React, { useState } from 'react';\nimport GenerationSettingsScreen from './components/GenerationSettingsScreen.react.js'\nimport GeneratedResultsScreen from './components/GeneratedResultsScreen.react.js'\nimport seedrandom from 'seedrandom';\nimport randomstring from 'randomstring'\n\nlet _seedRef = React.createRef()\nlet seed;\nfunction App() {\n  let [isSettingsScreen, setIsSettingsScreen] = React.useState(true);\n  function generateExcercises(seedRef){\n    _seedRef = seedRef\n    setIsSettingsScreen(false);\n    seed = seedRef.current.value.substring(0, 20)\n    if(seed === '')\n      seed = randomstring.generate(16)\n    seedrandom(seed, { global: true });\n  }\n\n  return (\n    <>\n      {isSettingsScreen?(<GenerationSettingsScreen ongenerate={seedRef => generateExcercises(seedRef)}/>):(<GeneratedResultsScreen seed={seed} seedRef={_seedRef}/>)}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './styles/utils.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}